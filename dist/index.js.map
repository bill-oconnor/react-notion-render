{"version":3,"file":"index.js","sources":["../src/types/BlockTypes.ts","../src/components/common/EmptyBlock/index.tsx","../src/utils/getClassname.ts","../src/components/common/Link/index.tsx","../src/components/common/Image/index.tsx","../src/components/common/Embed/index.tsx","../src/components/common/Video/constants.tsx","../src/components/common/Video/index.tsx","../src/hoc/withCustomComponent/constants.ts","../src/hoc/withCustomComponent/index.tsx","../src/components/core/Text/index.tsx","../src/utils/slugify.ts","../src/hoc/withContentValidation/index.tsx","../src/hoc/withContentValidation/constants.tsx","../src/components/common/List/components/Checkbox/index.tsx","../src/components/common/List/components/ListItem/index.tsx","../src/components/common/List/index.tsx","../src/components/common/Code/index.tsx","../src/components/common/File/index.tsx","../src/components/common/Title/index.tsx","../src/components/common/Quote/index.tsx","../src/components/common/Table/index.tsx","../src/components/common/Callout/index.tsx","../src/components/common/DummyText/index.tsx","../src/components/common/Paragraph/index.tsx","../src/components/common/Image/wrappedImage.tsx","../src/components/common/Video/wrappedVideo.tsx","../src/components/common/Embed/wrappedEmbed.tsx","../src/components/common/TableOfContents/index.tsx","../src/constants/BlockComponentsMapper/index.ts","../src/components/common/Divider/index.tsx","../src/types/Block.ts","../src/utils/getBlocksToRender.ts","../src/utils/indexGenerator.ts","../src/components/core/Render/index.tsx"],"sourcesContent":["export enum blockEnum {\n  HEADING1 = 'heading_1',\n  HEADING2 = 'heading_2',\n  HEADING3 = 'heading_3',\n  PARAGRAPH = 'paragraph',\n  TOGGLE_LIST = 'toggle',\n  DOTS_LIST = 'bulleted_list_item',\n  ENUM_LIST = 'numbered_list_item',\n  ENUM_LIST_PARENT = 'numbered_list',\n  CHECK_LIST = 'to_do',\n  TITLE = 'title',\n  VIDEO = 'video',\n  IMAGE = 'image',\n  EMBED = 'embed',\n  FILE = 'file',\n  PDF = 'pdf',\n  BOOKMARK = 'bookmark',\n  CALLOUT = 'callout',\n  QUOTE = 'quote',\n  DIVIDER = 'divider',\n  CODE = 'code',\n  SYNCED_BLOCK = 'synced_block',\n  TABLE_OF_CONTENTS = 'table_of_contents',\n  TABLE = 'table',\n  TABLE_ROW = 'table_row',\n  CHILD_PAGE = 'child_page',\n  MENTION = 'mention'\n}\n\nexport const UNSUPPORTED_TYPE = 'unsupported'\n","import React from 'react'\n\nfunction EmptyBlock() {\n  return (\n    <div className=\"rnr-empty-block\"/>\n  )\n}\n\nexport default EmptyBlock\n","import { blockEnum } from '..'\nimport { ClassnamesType } from '../constants/BlockComponentsMapper/types'\nimport Text from '../types/Text'\n\nconst DEFAULT_COLOR = 'default'\n\nexport function getClassname(annotations: Text['annotations']) {\n  return `\n  ${annotations.bold ? 'rnr-bold' : ''}\n  ${annotations.code ? 'rnr-inline-code' : ''}\n  ${annotations.italic ? 'rnr-italic' : ''}\n  ${annotations.strikethrough ? 'rnr-strikethrough' : ''}\n  ${annotations.underline ? 'rnr-underline' : ''}\n  ${annotations.color !== DEFAULT_COLOR ? `rnr-${annotations.color}` : ''}\n`.trim()\n}\n\nexport function blockTypeClassname(notionType: blockEnum) {\n  return `rnr-${notionType}`\n}\n\nexport function blockTypeCustomClassname(\n  notionType: blockEnum,\n  classnameMapping: ClassnamesType\n) {\n  return classnameMapping[notionType] || ''\n}\n","import React from 'react'\n\nexport interface Props {\n  url: string\n  children: React.ReactNode\n  className?: string\n}\n\nfunction Link({ url, children, className }: Props) {\n  const redirectProps = url.startsWith('#')\n    ? {}\n    : {\n        target: '_blank',\n        rel: 'noreferrer'\n      }\n  return (\n    <a href={url} className={className} {...redirectProps}>\n      {children}\n    </a>\n  )\n}\n\nexport default Link\n","import React from 'react'\nimport { DropedProps } from '../../../hoc/withContentValidation'\n\nexport interface Props {\n  className?: string\n  media?: DropedProps['media']\n}\n\nfunction Image({ className, media }: Props) {\n  if (!media) return null\n  const { src, alt, href } = media\n\n  const img = <img className={className} src={src} alt={alt} />\n\n  return href\n    ? (\n    <a href={href} target='_blank' rel='noreferrer'>\n      {img}\n    </a>\n      )\n    : (\n        img\n      )\n}\n\nexport default Image\n","import React from 'react'\nimport { DropedProps } from '../../../hoc/withContentValidation'\n\nexport type Props = {\n  className?: string\n  media?: DropedProps['media']\n  frameBorder?: string\n  allow?: string\n  allowFullScreen?: boolean\n}\n\nfunction Embed({\n  media,\n  className,\n  frameBorder,\n  allow,\n  allowFullScreen\n}: Props) {\n  if (!media) return null\n\n  const { src, alt } = media\n\n  return (\n    <iframe\n      src={src}\n      title={alt}\n      className={`block ${className}`}\n      frameBorder={frameBorder ?? '0'}\n      allow={allow}\n      allowFullScreen={allowFullScreen}\n    />\n  )\n}\n\nexport default Embed\n","import React from 'react'\nimport Embed from '../Embed'\n\nconst MATCHERS = [\n  {\n    name: 'youtube',\n    REGEXP:\n      /(?:youtu\\.be\\/|youtube\\.com(?:\\/embed\\/|\\/v\\/|\\/watch\\?v=|\\/user\\/\\S+|\\/ytscreeningroom\\?v=))([\\w\\-]{10,12})\\b/,\n    getUrl: (src: string) => {\n      const GET_ID =\n        /(?:youtu\\.be\\/|youtube\\.com(?:\\/embed\\/|\\/v\\/|\\/watch\\?v=|\\/user\\/\\S+|\\/ytscreeningroom\\?v=|\\/sandalsResorts#\\w\\/\\w\\/.*\\/))([^\\/&]{10,12})/\n      const id = src.match(GET_ID)?.[1]\n      return `https://www.youtube.com/embed/${id}`\n    }\n  },\n  {\n    name: 'googleDrive',\n    REGEXP: /drive.google.com/,\n    getUrl: (src: string) => {\n      const videoUrl = src.split('/')\n      videoUrl.pop()\n      return `${videoUrl.join('/')}/preview`\n    }\n  }\n]\n\nexport function getPlayer(src: string, alt: string, className?: string) {\n  const match = MATCHERS.find((option) => option.REGEXP.test(src))\n\n  if (!match) return null\n\n  return PLAYERS[match.name](\n    match.getUrl ? match.getUrl(src) : src,\n    alt,\n    className\n  )\n}\n\nconst PLAYERS = {\n  youtube: (url: string, title: string, className?: string) => (\n    <Embed\n      media={{ alt: title, src: url }}\n      className={className}\n      allow='accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture'\n      allowFullScreen\n    />\n  ),\n  googleDrive: (url: string, title: string, className?: string) => (\n    <Embed\n      media={{ alt: title, src: url }}\n      className={className}\n      allow='autoplay'\n    />\n  )\n}\n\nexport default PLAYERS\n","import React from 'react'\nimport { DropedProps } from '../../../hoc/withContentValidation'\nimport { getPlayer } from './constants'\n\nexport type Props = {\n  className?: string\n  media?: DropedProps['media']\n}\n\nfunction Video({ media, className }: Props) {\n  if (!media) return null\n\n  const { src, alt } = media\n\n  const player = getPlayer(src, alt, className)\n\n  return (\n    player ?? (\n      <video className={className} controls>\n        <source src={src} type='video/mp4' />\n        {alt}\n      </video>\n    )\n  )\n}\n\nexport default Video\n","import React from 'react'\n\nimport Text from '../../types/Text'\nimport { getClassname } from '../../utils/getClassname'\n\nimport Image, { Props as ImageProps } from '../../components/common/Image'\nimport Link, { Props as LinkProps } from '../../components/common/Link'\nimport Video, { Props as VideoProps } from '../../components/common/Video'\n\ntype WrappedComponentPropsType = Text\nexport type CustomComponentPropsType = ImageProps | LinkProps | VideoProps\n\ninterface CustomComponent {\n  match: RegExp\n  component: React.ComponentType<CustomComponentPropsType>\n  transformProps?: (\n    props: WrappedComponentPropsType\n  ) => CustomComponentPropsType\n}\n\nexport const customComponents: CustomComponent[] = [\n  {\n    match: /-\\[[^\\]]*\\]\\((.*?)\\s*(\"(?:.*[^\"])\")?\\s*\\)/,\n    // eslint-disable-next-line camelcase\n    transformProps: ({ plain_text }) => ({\n      media: {\n        alt: plain_text.split('-[')[1].split(']')[0],\n        src: plain_text.split('(')[1].split(')')[0],\n        player: plain_text.indexOf('#') < 0 ? undefined : plain_text.substr(plain_text.indexOf('#')).replace('#', '')\n      }\n    }),\n    component: Video\n  },\n  {\n    match: /!\\[[^\\]]*\\]\\((.*?)\\s*(\"(?:.*[^\"])\")?\\s*\\)/,\n    // eslint-disable-next-line camelcase\n    transformProps: ({ plain_text }) => ({\n      media: {\n        alt: plain_text.split('![')[1].split(']')[0],\n        src: plain_text.split('(')[1].split(')')[0],\n        href: plain_text.indexOf('#') < 0 ? undefined : plain_text.substr(plain_text.indexOf('#')).replace('#', '')\n      }\n    }),\n    component: Image\n  },\n  {\n    match: /[[^\\]]*\\]\\((.*?)\\s*(\"(?:.*[^\"])\")?\\s*\\)/,\n    // eslint-disable-next-line camelcase\n    transformProps: ({ plain_text, annotations }) => ({\n      url: plain_text.split('(')[1].split(')')[0],\n      children: plain_text.split('[')[1].split(']')[0],\n      className: getClassname(annotations)\n    }),\n    component: Link\n  }\n]\n","import React from 'react'\n\nimport Text from '../../types/Text'\nimport { CustomComponentPropsType, customComponents } from './constants'\n\nfunction withCustomComponent<PropsType extends object>(\n  TempComponent: React.ComponentType<PropsType>\n): React.FC<PropsType> {\n  return (props: PropsType & Text) => {\n    const customComponent = customComponents.find((component) =>\n      component.match.test(props.plain_text)\n    )\n\n    const Component: React.ComponentType<PropsType | CustomComponentPropsType> =\n      customComponent?.component || TempComponent\n\n    if (customComponent?.transformProps) {\n      const newProps = { ...props, ...customComponent.transformProps(props) }\n      return <Component {...newProps} />\n    }\n\n    return <Component {...props} />\n  }\n}\n\nexport default withCustomComponent\n","/* eslint-disable camelcase */\nimport React, { Fragment, ReactElement } from 'react'\n\nimport IText from '../../../types/Text'\nimport { getClassname } from '../../../utils/getClassname'\nimport Link from '../../common/Link'\nimport withCustomComponent from '../../../hoc/withCustomComponent'\nimport { BlockComponentsMapperType } from '../../../constants/BlockComponentsMapper/types'\nimport { ParsedBlock } from '../../../types/Block'\nimport { blockEnum } from '../../../types/BlockTypes'\n\ntype PropTypes = IText & {\n  blockComponentsMapper?: BlockComponentsMapperType\n  block?: ParsedBlock\n}\n// Need to get the component mapping into here\n// I want additional page info to be available...\nexport const Text: React.FC<PropTypes> = (props: PropTypes) => {\n  const { block, blockComponentsMapper, ...textProps } = props\n  const { text, annotations, type, href, plain_text, mapPageUrlFn } = textProps\n  const annotationsClassName = getClassname(annotations)\n\n  if (type === blockEnum.MENTION) {\n    const redirectProps =\n      props.mention?.type === 'page'\n        ? {\n            target: '_blank',\n            rel: 'noreferrer'\n          }\n        : {}\n\n    if (\n      block &&\n      blockComponentsMapper &&\n      blockComponentsMapper[blockEnum.MENTION]\n    ) {\n      const Component = blockComponentsMapper[blockEnum.MENTION]\n      return <Component block={block!} />\n    }\n    return (\n      <a\n        className={`rnr-mention ${annotationsClassName}`}\n        href={href}\n        {...redirectProps}\n      >\n        {plain_text}\n      </a>\n    )\n  }\n\n  if (!text) return null\n\n  let element: ReactElement = <Fragment>{text.content}</Fragment>\n\n  if (annotationsClassName)\n    element = <span className={annotationsClassName}>{text.content}</span>\n\n  // could havle multiple...\n  if (annotations.bold) {\n    element = <strong className={annotationsClassName}>{text.content}</strong>\n  } else if (annotations.code) {\n    element = <code className={annotationsClassName}>{text.content}</code>\n  } else if (annotations.italic) {\n    element = <em className={annotationsClassName}>{text.content}</em>\n  } else if (annotations.strikethrough) {\n    element = <s className={annotationsClassName}>{text.content}</s>\n  } else if (annotations.underline) {\n    element = <u className={annotationsClassName}>{text.content}</u>\n  }\n\n  if (text.link) {\n    let {\n      link: { url }\n    } = text\n    if (url[0] === '/' && mapPageUrlFn) {\n      url = mapPageUrlFn(url.slice(1))\n    }\n    element = (\n      <Link url={url} className={`${annotationsClassName} rnr-link`}>\n        {element}\n      </Link>\n    )\n  }\n\n  return element\n}\n\nexport default withCustomComponent(Text)\n/* eslint-enable camelcase */\n","export function slugify(text: string) {\n  return text\n    .toString()\n    .trim()\n    .toLowerCase()\n    .replace(/\\s+/g, '-')\n    .replace(/[^\\w\\-]+/g, '')\n    .replace(/\\-\\-+/g, '-')\n    .replace(/^-+/, '')\n    .replace(/-+$/, '')\n}\n","import React, { PropsWithChildren } from 'react'\n\nimport { ParsedBlock, SimpleBlock } from '../../types/Block'\n\nimport EmptyBlock from '../../components/common/EmptyBlock'\nimport { getDefaultProps, getMediaProps } from './constants'\nimport { slugify } from '../../utils/slugify'\nimport {\n  blockTypeClassname,\n  blockTypeCustomClassname\n} from '../../utils/getClassname'\nimport {\n  BlockComponentsMapperType,\n  ClassnamesType\n} from '../../constants/BlockComponentsMapper/types'\n\nexport interface WithContentValidationProps {\n  classNames?: ClassnamesType\n  emptyBlocks?: boolean\n  block: ParsedBlock\n  slugifyFn?: (text: string) => string\n  mapPageUrlFn?: (input: any) => string\n  simpleTitles?: boolean\n  index?: SimpleBlock[]\n  blockComponentsMapper?: BlockComponentsMapperType\n}\n\nexport type DropedProps = PropsWithChildren<{\n  className?: string\n  checked: boolean\n  plainText: string\n  config: WithContentValidationProps\n  slugifyFn: ((text: string) => string) | null\n  language?: string\n  media?: {\n    alt: string\n    src: string\n    href?: string\n    name?: string\n    extension?: string\n    player?: string\n  }\n  index?: SimpleBlock[]\n  blockComponentsMapper?: BlockComponentsMapperType\n}>\n\nfunction withContentValidation(\n  Component: React.ComponentType<DropedProps>\n): React.FC<WithContentValidationProps> {\n  return ({\n    emptyBlocks,\n    slugifyFn,\n    classNames,\n    simpleTitles,\n    ...props\n  }: WithContentValidationProps) => {\n    const hasContent = props.block.hasContent()\n    if (!hasContent && !emptyBlocks) {\n      return null\n    }\n\n    let returnedProps: DropedProps = {\n      checked: false,\n      children: null,\n      plainText: '',\n      slugifyFn: simpleTitles ? null : slugifyFn ?? slugify,\n      className: classNames\n        ? `${blockTypeClassname(\n            props.block.notionType\n          )} ${blockTypeCustomClassname(props.block.notionType, classNames)}`\n        : undefined,\n      config: {\n        classNames: classNames,\n        block: props.block,\n        blockComponentsMapper: props.blockComponentsMapper,\n        emptyBlocks\n      }\n    }\n\n    if (props.block.isMedia()) {\n      returnedProps.media = getMediaProps(props)\n    } else {\n      returnedProps = { ...returnedProps, ...getDefaultProps(props) }\n    }\n\n    return hasContent ? <Component {...returnedProps} /> : <EmptyBlock />\n  }\n}\n\nexport default withContentValidation\n","import React from 'react'\nimport { WithContentValidationProps } from '.'\nimport IText from '../../types/Text'\n\nimport WrappedText, { Text } from '../../components/core/Text'\n\nexport function getMediaProps(props: WithContentValidationProps) {\n  const { block } = props\n  const url = block.getUrl()\n\n  if (!url) return undefined\n\n  const urlParts = url.match(/\\/?([^/.]*)\\.?([^/]*)$/)\n\n  const name = urlParts?.[1] ?? ''\n  const extension = urlParts?.[2].split('?')[0] ?? ''\n\n  return {\n    name,\n    extension,\n    alt: block.getPlainText(),\n    src: url\n  }\n}\n\nexport function getDefaultProps(props: WithContentValidationProps) {\n  const { block, mapPageUrlFn } = props\n  const plainText = block.getPlainText()\n\n  return {\n    checked: Boolean(block.content?.checked),\n    plainText: plainText,\n    children: block.content?.text.map((text: IText, index: number) => {\n      let TextComponent = Text\n      if (block.supportCustomComponents() && !text.annotations.code) {\n        TextComponent = WrappedText\n      }\n      return (\n        <TextComponent\n          key={index}\n          {...text}\n          mapPageUrlFn={mapPageUrlFn}\n          blockComponentsMapper={props.blockComponentsMapper}\n          block={block}\n        />\n      )\n    }),\n    language: block.content?.language,\n    index: props.index,\n    blockComponentsMapper: props.blockComponentsMapper\n  }\n}\n","import React from 'react'\n\nimport styles from '../../styles.module.css'\n\ninterface Props {\n  checked?: boolean\n}\n\nfunction Checkbox({ checked }: Props) {\n  return (\n    <input\n      type='checkbox'\n      checked={checked}\n      className={styles.check}\n      readOnly\n    />\n  )\n}\n\nexport default Checkbox\n","import React, { Fragment } from 'react'\n\nimport { blockEnum } from '../../../../../types/BlockTypes'\nimport withContentValidation, {\n  DropedProps\n} from '../../../../../hoc/withContentValidation'\n\nimport styles from '../../styles.module.css'\n\nimport Checkbox from '../Checkbox'\nimport { Text } from '../../../../core/Text'\n\nfunction ListItem({\n  children,\n  config,\n  className,\n  checked,\n  blockComponentsMapper\n}: DropedProps) {\n  const { notionType: type, items, content } = config.block\n\n  const Item = () => {\n    if (type === blockEnum.CHECK_LIST) {\n      return (\n        <Fragment>\n          <Checkbox checked={checked} />\n          {children}\n        </Fragment>\n      )\n    } else if (type === blockEnum.TOGGLE_LIST && items) {\n      return (\n        <details>\n          <summary className={styles['drop-button']}>{children}</summary>\n          <div className={styles['drop-children']}>\n            {items.map((block) => {\n              const Component = block.getComponent(blockComponentsMapper)\n\n              return Component ? (\n                <Component {...config} key={block.id} block={block} />\n              ) : null\n            })}\n          </div>\n        </details>\n      )\n    }\n    return content ? (\n      <div>\n        {content.text.map((text, index) => (\n          <Text key={index} {...text} />\n        ))}\n      </div>\n    ) : (\n      <p>{children}</p>\n    )\n  }\n\n  return (\n    <li className={className}>\n      <Item />\n    </li>\n  )\n}\n\nexport default withContentValidation(ListItem)\n","import React, { PropsWithChildren } from 'react'\n\nimport { blockEnum } from '../../../types/BlockTypes'\nimport withContentValidation, {\n  DropedProps\n} from '../../../hoc/withContentValidation'\n\nimport ListItem from './components/ListItem'\n\nimport styles from './styles.module.css'\n\nfunction List({ className, config }: DropedProps) {\n  const { notionType: type, items } = config.block\n\n  const cn = `${\n    type === blockEnum.CHECK_LIST || type === blockEnum.TOGGLE_LIST\n      ? styles['remove-style']\n      : ''\n  } ${className}`\n\n  const Wrapper = (props: PropsWithChildren<{ type: blockEnum }>) => {\n    const { children, type } = props\n\n    return type === blockEnum.ENUM_LIST_PARENT ? (\n      <ol className={cn}>{children}</ol>\n    ) : (\n      <ul className={cn}>{children}</ul>\n    )\n  }\n\n  return (\n    <Wrapper type={type}>\n      {items?.map((item) => (\n        <ListItem {...config} key={item.id} block={item} />\n      ))}\n    </Wrapper>\n  )\n}\n\nexport default withContentValidation(List)\n","import React from 'react'\nimport withContentValidation, { DropedProps } from '../../../hoc/withContentValidation'\nimport { slugify } from '../../../utils/slugify'\n\nfunction Code({ className, children, language }: DropedProps) {\n  let cn = className\n\n  if (language) {\n    cn += ` language-${slugify(language)}`\n  }\n\n  return (\n    <pre><code className={cn}>{children}</code></pre>\n  )\n}\n\nexport default withContentValidation(Code)\n","import React from 'react'\nimport withContentValidation, { DropedProps } from '../../../hoc/withContentValidation'\nimport Link from '../Link'\n\ninterface Props {\n  className?: string\n  media?: DropedProps['media']\n}\n\nfunction File({ media, className }: Props) {\n  if (!media) return null\n\n  const { src, name, extension } = media\n\n  const cn = `block ${className ?? ''}`\n\n  return (\n    <Link url={src} className={cn}>\n      {name}.{extension}\n    </Link>\n  )\n}\n\nexport default withContentValidation(File)\n","import React from 'react'\n\nimport { blockEnum } from '../../../types/BlockTypes'\n\nimport withContentValidation, {\n  DropedProps\n} from '../../../hoc/withContentValidation'\n\nfunction Title({\n  children,\n  className,\n  plainText,\n  config,\n  slugifyFn\n}: DropedProps) {\n  const { notionType: type } = config.block\n  const props = {\n    className,\n    children,\n    ...(slugifyFn ? { id: slugifyFn(plainText || '') } : {})\n  }\n\n  const Title = () => {\n    if (type === blockEnum.HEADING2) {\n      return <h2 {...props} />\n    } else if (type === blockEnum.HEADING3) {\n      return <h3 {...props} />\n    }\n\n    return <h1 {...props} />\n  }\n\n  return slugifyFn ? (\n    <a href={`#${slugifyFn(plainText)}`} className='title'>\n      <Title />\n    </a>\n  ) : (\n    <Title />\n  )\n}\n\nexport default withContentValidation(Title)\n","import React from 'react'\n\nimport withContentValidation, {\n  DropedProps\n} from '../../../hoc/withContentValidation'\nimport Text from '../../core/Text'\n\nfunction Quote({ className, config }: DropedProps) {\n  const {\n    block: { content }\n  } = config\n\n  if (!content) return null\n  return (\n    <blockquote className={className}>\n      {content.text.map((text, index) => (\n        <Text key={index} {...text} />\n      ))}\n    </blockquote>\n  )\n}\n\nexport default withContentValidation(Quote)\n","import React from 'react'\n\nimport withContentValidation, {\n  DropedProps\n} from '../../../hoc/withContentValidation'\nimport IText from '../../../types/Text'\nimport { blockTypeClassname } from '../../../utils/getClassname'\n\nimport Text from '../../core/Text'\n\ntype tableRowProps = {\n  cells: IText[][]\n  className?: string\n  id: string\n}\nfunction TableRow({ cells, className, id }: tableRowProps) {\n  return (\n    <tr className={className}>\n      {cells.map((cellTexts, i) => (\n        <td key={`td-${id}-${i}`}>\n          {cellTexts.map((text, textI) => <Text {...text} key={`text-${id}-${textI}`} />)}\n        </td>\n      ))}\n    </tr>\n  )\n}\n\nfunction Table({ className, config }: DropedProps) {\n  const { content, items } = config.block\n  const rows = items?.filter(({ content }) => content?.cells)\n\n  if (!rows) return null\n\n  const cn = `${className} ${content?.hasColumnHeader ? 'has-column-header' : ''\n    } ${content?.hasRowHeader ? 'has-row-header' : ''}`.trim()\n\n  return (\n    <table className={cn}>\n      <tbody>\n        {rows.map(({ notionType, content, id }) => (\n          <TableRow className={blockTypeClassname(notionType)} cells={content!.cells!} key={id} id={id} />\n        ))}\n      </tbody>\n    </table>\n  )\n}\n\nexport default withContentValidation(Table)\n","import React from 'react'\n\nimport withContentValidation, {\n  DropedProps\n} from '../../../hoc/withContentValidation'\nimport Text from '../../core/Text'\n\nfunction Callout({ className, config }: DropedProps) {\n  const {\n    block: { content }\n  } = config\n\n  if (!content) return null\n\n  return (\n    <div className={className}>\n      {content.icon?.emoji}\n      <span>\n        {content.text.map((text, index) => (\n          <Text key={index} {...text} />\n        ))}\n      </span>\n    </div>\n  )\n}\n\nexport default withContentValidation(Callout)\n","import React from 'react'\n\nimport withContentValidation, {\n  DropedProps\n} from '../../../hoc/withContentValidation'\n\nfunction DummyText({ children }: DropedProps) {\n  return <React.Fragment>{children}</React.Fragment>\n}\n\nexport default withContentValidation(DummyText)\n","import React from 'react'\n\nimport withContentValidation, { DropedProps } from '../../../hoc/withContentValidation'\n\nfunction Paragraph({ children, className }: DropedProps) {\n  return <p className={className}>{children}</p>\n}\n\nexport default withContentValidation(Paragraph)\n","import Image from '.'\nimport withContentValidation from '../../../hoc/withContentValidation'\n\nexport default withContentValidation(Image)\n","import Video from '.'\nimport withContentValidation from '../../../hoc/withContentValidation'\n\nexport default withContentValidation(Video)\n","import Embed from '.'\nimport withContentValidation from '../../../hoc/withContentValidation'\n\nexport default withContentValidation(Embed)\n","import React from 'react'\nimport withContentValidation, {\n  DropedProps\n} from '../../../hoc/withContentValidation'\nimport { blockTypeClassname } from '../../../utils/getClassname'\n\ntype tableItemProps ={slugifyFn: ((text: string) => string) | null, plainText: string}\nfunction TableItem ({ slugifyFn, plainText }: tableItemProps) {\n  if (!slugifyFn) return <React.Fragment>{plainText}</React.Fragment>\n\n  return (\n    <a href={`#${slugifyFn(plainText)}`}>\n      {plainText}\n    </a>\n  )\n}\n\nfunction TableOfContents({ className, index, slugifyFn }: DropedProps) {\n  if (!index) return null\n\n  return (\n    <ul className={className}>\n      {index.map(({ id, plainText, type }) => (\n        <li key={id} className={blockTypeClassname(type)}>\n          <TableItem slugifyFn={slugifyFn} plainText={plainText}/>\n        </li>\n      ))}\n    </ul>\n  )\n}\n\nexport default withContentValidation(TableOfContents)\n","import { blockEnum } from '../../types/BlockTypes'\n\nimport List from '../../components/common/List'\nimport Code from '../../components/common/Code'\nimport File from '../../components/common/File'\nimport Title from '../../components/common/Title'\nimport Quote from '../../components/common/Quote'\nimport Table from '../../components/common/Table'\nimport Callout from '../../components/common/Callout'\nimport Divider from '../../components/common/Divider'\nimport DummyText from '../../components/common/DummyText'\nimport Paragraph from '../../components/common/Paragraph'\nimport Image from '../../components/common/Image/wrappedImage'\nimport Video from '../../components/common/Video/wrappedVideo'\nimport Embed from '../../components/common/Embed/wrappedEmbed'\nimport TableOfContents from '../../components/common/TableOfContents'\n\nimport { BlockComponentsMapperType } from './types'\n\nexport const BlockComponentsMapper: BlockComponentsMapperType = {\n  [blockEnum.PARAGRAPH]: Paragraph,\n  [blockEnum.HEADING1]: Title,\n  [blockEnum.HEADING2]: Title,\n  [blockEnum.HEADING3]: Title,\n  [blockEnum.DOTS_LIST]: List,\n  [blockEnum.ENUM_LIST]: List,\n  [blockEnum.ENUM_LIST_PARENT]: List,\n  [blockEnum.CHECK_LIST]: List,\n  [blockEnum.TOGGLE_LIST]: List,\n  [blockEnum.VIDEO]: Video,\n  [blockEnum.FILE]: File,\n  [blockEnum.PDF]: Embed,\n  [blockEnum.EMBED]: Embed,\n  [blockEnum.TITLE]: DummyText,\n  [blockEnum.IMAGE]: Image,\n  [blockEnum.CALLOUT]: Callout,\n  [blockEnum.QUOTE]: Quote,\n  [blockEnum.DIVIDER]: Divider,\n  [blockEnum.CODE]: Code,\n  [blockEnum.TABLE_OF_CONTENTS]: TableOfContents,\n  [blockEnum.TABLE]: Table,\n  [blockEnum.TABLE_ROW]: undefined,\n  [blockEnum.SYNCED_BLOCK]: undefined,\n  [blockEnum.BOOKMARK]: undefined,\n  [blockEnum.CHILD_PAGE]: undefined\n}\n","import React from 'react'\n\nconst Divider = () => <hr />\n\nexport default Divider\n","/* eslint-disable camelcase */\nimport Text from './Text'\nimport { blockEnum } from './BlockTypes'\nimport { NotionBlock } from './NotionBlock'\nimport { BlockComponentsMapperType } from '../constants/BlockComponentsMapper/types'\nimport { BlockComponentsMapper } from '../constants/BlockComponentsMapper'\n\nexport class ParsedBlock {\n  id: string\n  notionType: blockEnum\n  items: ParsedBlock[] | null\n  content: null | {\n    text: Text[]\n    checked?: boolean\n    caption?: Text[]\n    type?: 'external' | 'file'\n    external?: {\n      url: string\n    }\n    file?: {\n      url: string\n    }\n    url?: string\n    icon?: {\n      type: 'emoji'\n      emoji: string\n    }\n    language?: string\n    hasColumnHeader?: boolean\n    hasRowHeader?: boolean\n    cells?: Text[][]\n  }\n\n  constructor(initialValues: NotionBlock, isChild?: boolean) {\n    const notionType = initialValues.type as blockEnum\n    const content = initialValues[notionType]\n\n    if (!notionType || !content) return\n\n    this.id = initialValues.id\n    this.notionType = notionType\n\n    if (initialValues.type === blockEnum.TITLE && 'title' in initialValues) {\n      this.items = null\n      this.content = { text: initialValues.title }\n    } else if (initialValues.type === blockEnum.CHILD_PAGE) {\n      this.items = null\n      this.content = { text: [content.title] }\n    } else if (this.isList() && !isChild) {\n      this.content = null\n      this.items = [new ParsedBlock(initialValues, true)]\n    } else {\n      const {\n        rich_text,\n        text,\n        checked,\n        caption,\n        type,\n        external,\n        file,\n        url,\n        icon,\n        language,\n        has_column_header,\n        has_row_header,\n        cells\n      } = content\n\n      this.items =\n        content.children?.map(\n          (child: NotionBlock) => new ParsedBlock(child, true)\n        ) ?? null\n      this.content = {\n        text: rich_text ?? text ?? [],\n        checked,\n        caption,\n        type,\n        external,\n        file,\n        url,\n        icon,\n        language,\n        hasColumnHeader: has_column_header,\n        hasRowHeader: has_row_header,\n        cells\n      }\n    }\n  }\n\n  getComponent(customMapper?: BlockComponentsMapperType) {\n    const mapper = { ...BlockComponentsMapper, ...customMapper }\n    return mapper[this.notionType]\n  }\n\n  getUrl() {\n    if (!this.content) return null\n\n    let url = null\n\n    if (this.isEmbed()) {\n      url = this.content.url\n    } else if (this.isMedia() && this.content?.type) {\n      url = this.content[this.content.type]?.url\n    }\n    return url || null\n  }\n\n  getType() {\n    switch (this.notionType) {\n      case blockEnum.TOGGLE_LIST:\n      case blockEnum.DOTS_LIST:\n      case blockEnum.CHECK_LIST:\n      case blockEnum.ENUM_LIST:\n        return 'LIST'\n      case blockEnum.HEADING1:\n      case blockEnum.HEADING2:\n      case blockEnum.HEADING3:\n        return 'TITLE'\n      case blockEnum.FILE:\n      case blockEnum.VIDEO:\n      case blockEnum.IMAGE:\n      case blockEnum.PDF:\n      case blockEnum.EMBED:\n        return 'MEDIA'\n      case blockEnum.SYNCED_BLOCK:\n        return 'CONTAINER'\n      case blockEnum.TABLE:\n      case blockEnum.TABLE_OF_CONTENTS:\n        return 'TABLE'\n      case blockEnum.CODE:\n        return 'CODE'\n      default:\n        return 'ELEMENT'\n    }\n  }\n\n  getPlainText() {\n    const textComponent = this.isMedia()\n      ? this.content?.caption\n      : this.content?.text\n\n    return textComponent?.map((text: Text) => text.plain_text).join(' ') ?? ''\n  }\n\n  isList() {\n    return this.getType() === 'LIST'\n  }\n\n  isCode() {\n    return this.getType() === 'CODE'\n  }\n\n  isTitle() {\n    return this.getType() === 'TITLE'\n  }\n\n  isMedia() {\n    return this.getType() === 'MEDIA'\n  }\n\n  isEmbed() {\n    return this.getType() === 'MEDIA' && this.notionType === blockEnum.EMBED\n  }\n\n  isContainer() {\n    return this.getType() === 'CONTAINER'\n  }\n\n  isTable() {\n    return this.getType() === 'TABLE'\n  }\n\n  equalsType(type: blockEnum) {\n    return this.notionType === type\n  }\n\n  addItem(block: NotionBlock) {\n    if (!this.items) this.items = []\n\n    this.items.push(new ParsedBlock(block, true))\n  }\n\n  hasContent() {\n    return (\n      this.getUrl() ||\n      this.getPlainText().trim() !== '' ||\n      this.items?.length ||\n      this.isTable()\n    )\n  }\n\n  supportCustomComponents() {\n    return !this.isCode()\n  }\n}\n\nexport type SimpleBlock = {\n  id: string\n  type: blockEnum\n  text: Text[] | undefined\n  plainText: string\n  subItems?: SimpleBlock[]\n}\n","import { ParsedBlock } from '../types/Block'\nimport { UNSUPPORTED_TYPE } from '../types/BlockTypes'\nimport { NotionBlock } from '../types/NotionBlock'\n\nfunction areRelated(previous: ParsedBlock, current: ParsedBlock) {\n  return previous.isList() && previous.equalsType(current.notionType)\n}\n\n/**\n * The objetive of this function its remove blocks that are not supported and\n * put together the items of the same list to render easily\n * @param blocks the entire list of blocks\n * @returns\n */\nexport default function getBlocksToRender(blocks: NotionBlock[]): ParsedBlock[] {\n  const cleanBlocks = blocks.filter(\n    ({ type }) => type !== UNSUPPORTED_TYPE\n  )\n\n  if (!cleanBlocks.length) return []\n\n  const returnBlocks: ParsedBlock[] = []\n\n  for (let i = 0; i < cleanBlocks.length; i++) {\n    const previousBlock = returnBlocks[returnBlocks.length - 1]\n    const block = new ParsedBlock(cleanBlocks[i])\n\n    if (previousBlock && areRelated(previousBlock, block)) {\n      previousBlock.addItem(cleanBlocks[i])\n    } else {\n      if (block.isContainer() && block.items) {\n        returnBlocks.push(...block.items)\n      } else {\n        returnBlocks.push(block)\n      }\n    }\n  }\n\n  return returnBlocks\n}\n","import { ParsedBlock, SimpleBlock } from '../types/Block'\nimport { NotionBlock } from '../types/NotionBlock'\n\nexport function indexGenerator(blocks: NotionBlock[]): SimpleBlock[] {\n  const parsedBlocks = blocks.map(block => new ParsedBlock(block))\n  const titles = []\n\n  for (let i = 0; i < parsedBlocks.length; i++) {\n    if (parsedBlocks[i].isTitle()) {\n      titles.push(parsedBlocks[i])\n    } else if (parsedBlocks[i].isContainer() && parsedBlocks[i].items) {\n      titles.push(...parsedBlocks[i].items!.filter(block => block.isTitle()))\n    }\n  }\n\n  return titles.map((title) => ({\n    id: title.id,\n    type: title.notionType,\n    text: title.content?.text,\n    plainText: title.getPlainText()\n  })) ?? []\n}\n","import React, { PropsWithChildren } from 'react'\n\nimport { NotionBlock } from '../../../types/NotionBlock'\nimport { indexGenerator } from '../../../utils/indexGenerator'\nimport getBlocksToRender from '../../../utils/getBlocksToRender'\nimport {\n  BlockComponentsMapperType,\n  ClassnamesType\n} from '../../../constants/BlockComponentsMapper/types'\n\ninterface Props {\n  blocks: NotionBlock[]\n  useStyles?: boolean\n  classNames?: ClassnamesType\n  emptyBlocks?: boolean\n  slugifyFn?: (text: string) => string\n  mapPageUrlFn?: (input: any) => string\n  simpleTitles?: boolean\n  blockComponentsMapper?: BlockComponentsMapperType\n}\n\nfunction Render({\n  blocks,\n  classNames = {},\n  emptyBlocks,\n  useStyles,\n  slugifyFn,\n  mapPageUrlFn,\n  simpleTitles,\n  blockComponentsMapper\n}: Props) {\n  if (!blocks || !blocks.length) return null\n\n  const renderBlocks = getBlocksToRender(blocks)\n  const index = indexGenerator(blocks)\n\n  const Wrapper = (props: PropsWithChildren<{ useStyles: boolean }>) => {\n    const { useStyles, children } = props\n    return useStyles ? (\n      <div className='rnr-container'>{children}</div>\n    ) : (\n      <React.Fragment>{children}</React.Fragment>\n    )\n  }\n\n  return (\n    <Wrapper useStyles={!!useStyles}>\n      {renderBlocks.map((block) => {\n        const Component = block.getComponent(blockComponentsMapper)\n\n        return Component ? (\n          <Component\n            key={block.id}\n            classNames={classNames}\n            emptyBlocks={emptyBlocks}\n            block={block}\n            slugifyFn={slugifyFn}\n            mapPageUrlFn={mapPageUrlFn}\n            simpleTitles={simpleTitles}\n            index={index}\n            blockComponentsMapper={blockComponentsMapper}\n          />\n        ) : null\n      })}\n    </Wrapper>\n  )\n}\n\nexport default Render\n"],"names":["blockEnum","UNSUPPORTED_TYPE","EmptyBlock","React","createElement","className","getClassname","annotations","bold","code","italic","strikethrough","underline","color","trim","blockTypeClassname","notionType","Link","_ref","url","children","redirectProps","startsWith","target","rel","_extends","href","Image","media","img","src","alt","Embed","frameBorder","title","allow","allowFullScreen","MATCHERS","name","REGEXP","getUrl","_src$match","match","videoUrl","split","pop","join","PLAYERS","youtube","googleDrive","Video","player","find","option","test","getPlayer","controls","type","customComponents","transformProps","plain_text","indexOf","undefined","substr","replace","component","_ref2","_ref3","withCustomComponent","TempComponent","props","customComponent","Component","newProps","Text","block","blockComponentsMapper","textProps","_objectWithoutPropertiesLoose","_excluded","text","mapPageUrlFn","annotationsClassName","MENTION","_props$mention","mention","element","Fragment","content","link","slice","slugify","toString","toLowerCase","withContentValidation","emptyBlocks","slugifyFn","classNames","simpleTitles","hasContent","classnameMapping","returnedProps","checked","plainText","blockTypeCustomClassname","config","isMedia","_urlParts$","_urlParts$2$split$","urlParts","extension","getPlainText","getMediaProps","_block$content","_block$content2","_block$content3","Boolean","map","index","TextComponent","supportCustomComponents","WrappedText","key","language","getDefaultProps","Checkbox","readOnly","ListItem$1","_config$block","items","CHECK_LIST","TOGGLE_LIST","getComponent","id","cn","ENUM_LIST_PARENT","item","ListItem","Code$1","Title","HEADING2","HEADING3","TableRow","cells","cellTexts","i","textI","rows","filter","hasColumnHeader","hasRowHeader","_ref4","_content$icon","icon","emoji","DummyText$1","TableItem","_BlockComponentsMappe","BlockComponentsMapper","PARAGRAPH","Paragraph","HEADING1","DOTS_LIST","List","ENUM_LIST","VIDEO","FILE","File","PDF","EMBED","TITLE","DummyText","IMAGE","CALLOUT","Callout","QUOTE","Quote","DIVIDER","CODE","Code","TABLE_OF_CONTENTS","TableOfContents","TABLE","Table","TABLE_ROW","SYNCED_BLOCK","BOOKMARK","CHILD_PAGE","ParsedBlock","initialValues","isChild","this","isList","_content$children$map","_content$children","rich_text","caption","external","file","has_column_header","has_row_header","child","_proto","prototype","customMapper","_this$content","isEmbed","_this$content$this$co","getType","_this$content2","_this$content3","_textComponent$map$jo","textComponent","isCode","isTitle","isContainer","isTable","equalsType","addItem","push","_this$items","length","getBlocksToRender","blocks","cleanBlocks","previous","current","returnBlocks","previousBlock","apply","indexGenerator","_titles$map","parsedBlocks","titles","_title$content","_ref$classNames","useStyles","renderBlocks"],"mappings":"mGAAYA,8XAAAA,QAAZA,eAAA,GAAYA,EAAAA,QAASA,YAATA,kBA2BX,CAAA,IA1BC,SAAA,YACAA,EAAA,SAAA,YACAA,EAAA,SAAA,YACAA,EAAA,UAAA,YACAA,EAAA,YAAA,SACAA,EAAA,UAAA,qBACAA,EAAA,UAAA,qBACAA,EAAA,iBAAA,gBACAA,EAAA,WAAA,QACAA,EAAA,MAAA,QACAA,EAAA,MAAA,QACAA,EAAA,MAAA,QACAA,EAAA,MAAA,QACAA,EAAA,KAAA,OACAA,EAAA,IAAA,MACAA,EAAA,SAAA,WACAA,EAAA,QAAA,UACAA,EAAA,MAAA,QACAA,EAAA,QAAA,UACAA,EAAA,KAAA,OACAA,EAAA,aAAA,eACAA,EAAA,kBAAA,oBACAA,EAAA,MAAA,QACAA,EAAA,UAAA,YACAA,EAAA,WAAA,aACAA,EAAA,QAAA,UAGW,IAAAC,EAAmB,cC3BhC,SAASC,IACP,OACEC,UAAKC,cAAA,MAAA,CAAAC,UAAU,mBAEnB,CCAM,SAAUC,EAAaC,GAC3B,OACEA,QAAAA,EAAYC,KAAO,WAAa,IAAE,QAClCD,EAAYE,KAAO,kBAAoB,IACvCF,QAAAA,EAAYG,OAAS,aAAe,IAAE,QACtCH,EAAYI,cAAgB,oBAAsB,IAAE,QACpDJ,EAAYK,UAAY,gBAAkB,IAAE,QAR1B,YASlBL,EAAYM,MAAiCN,OAAAA,EAAYM,MAAU,IACrEC,MAAAA,MACF,CAEM,SAAUC,EAAmBC,GACjC,MAAcA,OAAAA,CAChB,CCXA,SAASC,EAAIC,GAAG,IAAAC,EAAGD,EAAHC,IAAKC,EAAQF,EAARE,SAAUf,EAASa,EAATb,UACvBgB,EAAgBF,EAAIG,WAAW,KACjC,CAAE,EACF,CACEC,OAAQ,SACRC,IAAK,cAEX,OACErB,EAAA,QAAAC,cAAA,IAAAqB,EAAGC,CAAAA,KAAMP,EAAKd,UAAWA,GAAegB,GACrCD,EAGP,CCZA,SAASO,EAAKT,GAA4B,IAAdU,EAAKV,EAALU,MAC1B,IAAKA,EAAO,OAAO,KACnB,IAAkBF,EAASE,EAATF,KAEZG,EAAM1B,UAAKC,cAAA,MAAA,CAAAC,UAJOa,EAATb,UAIwByB,IAFZF,EAAnBE,IAEyCC,IAFtBH,EAAdG,MAIb,OAAOL,EAELvB,UAAAC,cAAA,IAAA,CAAGsB,KAAMA,EAAMH,OAAO,SAASC,IAAI,cAChCK,GAICA,CAER,CCZA,SAASG,EAAKd,OACZU,EAAKV,EAALU,MAEAK,EAAWf,EAAXe,YAIA,OAAKL,EAKHzB,UAAAC,cAAA,SAAA,CACE0B,IAJiBF,EAAbE,IAKJI,MALiBN,EAARG,IAMT1B,UAAoBA,SAbfa,EAATb,UAcI4B,YAAwB,MAAXA,EAAAA,EAAe,IAC5BE,MAbCjB,EAALiB,MAcIC,gBAbWlB,EAAfkB,kBAEuB,IAczB,CC7BA,IAAMC,EAAW,CACf,CACEC,KAAM,UACNC,OACE,iHACFC,OAAQ,SAACV,GAAe,IAAAW,EAItB,MAAA,kCAD4B,OAApBA,EAAGX,EAAIY,MADb,oJAC0B,EAAjBD,EAAoB,GAEjC,GAEF,CACEH,KAAM,cACNC,OAAQ,mBACRC,OAAQ,SAACV,GACP,IAAMa,EAAWb,EAAIc,MAAM,KAE3B,OADAD,EAASE,MACCF,EAASG,KAAK,KAC1B,UAAA,IAgBEC,EAAU,CACdC,QAAS,SAAC7B,EAAae,EAAe7B,GAAkB,OACtDF,EAAC,QAAAC,cAAA4B,EACC,CAAAJ,MAAO,CAAEG,IAAKG,EAAOJ,IAAKX,GAC1Bd,UAAWA,EACX8B,MAAM,2FACNC,oBACA,EAEJa,YAAa,SAAC9B,EAAae,EAAe7B,GACxC,OAAAF,EAAAA,QAAAC,cAAC4B,EAAK,CACJJ,MAAO,CAAEG,IAAKG,EAAOJ,IAAKX,GAC1Bd,UAAWA,EACX8B,MAAM,YACN,GC3CN,SAASe,EAAKhC,GAA4B,IAAzBU,EAAKV,EAALU,MAAOvB,EAASa,EAATb,UACtB,IAAKuB,EAAO,OAAO,KAEnB,IAAQE,EAAaF,EAAbE,IAAKC,EAAQH,EAARG,IAEPoB,EDYQ,SAAUrB,EAAaC,EAAa1B,GAClD,IAAMqC,EAAQL,EAASe,KAAK,SAACC,GAAM,OAAKA,EAAOd,OAAOe,KAAKxB,EAAI,GAE/D,OAAKY,EAEEK,EAAQL,EAAMJ,MACnBI,EAAMF,OAASE,EAAMF,OAAOV,GAAOA,EACnCC,EACA1B,GALiB,IAOrB,CCtBiBkD,CAAUzB,EAAKC,EAAK1B,GAEnC,OACQ,MAAN8C,EAAAA,EACEhD,iCAAOE,UAAWA,EAAWmD,UAAQ,GACnCrD,EAAA,QAAAC,cAAA,SAAA,CAAQ0B,IAAKA,EAAK2B,KAAK,cACtB1B,EAIT,CCJO,IAAM2B,EAAsC,CACjD,CACEhB,MAAO,4CAEPiB,eAAgB,SAAAzC,GAAA,IAAG0C,EAAU1C,EAAV0C,WAAU,MAAQ,CACnChC,MAAO,CACLG,IAAK6B,EAAWhB,MAAM,MAAM,GAAGA,MAAM,KAAK,GAC1Cd,IAAK8B,EAAWhB,MAAM,KAAK,GAAGA,MAAM,KAAK,GACzCO,OAAQS,EAAWC,QAAQ,KAAO,OAAIC,EAAYF,EAAWG,OAAOH,EAAWC,QAAQ,MAAMG,QAAQ,IAAK,KAE7G,EACDC,UAAWf,GAEb,CACER,MAAO,4CAEPiB,eAAgB,SAAAO,GAAG,IAAAN,EAAUM,EAAVN,iBAAkB,CACnChC,MAAO,CACLG,IAAK6B,EAAWhB,MAAM,MAAM,GAAGA,MAAM,KAAK,GAC1Cd,IAAK8B,EAAWhB,MAAM,KAAK,GAAGA,MAAM,KAAK,GACzClB,KAAMkC,EAAWC,QAAQ,KAAO,OAAIC,EAAYF,EAAWG,OAAOH,EAAWC,QAAQ,MAAMG,QAAQ,IAAK,KAE3G,EACDC,UAAWtC,GAEb,CACEe,MAAO,0CAEPiB,eAAgB,SAAAQ,GAAG,IAAAP,EAAUO,EAAVP,WAAYrD,EAAW4D,EAAX5D,YAAmB,MAAA,CAChDY,IAAKyC,EAAWhB,MAAM,KAAK,GAAGA,MAAM,KAAK,GACzCxB,SAAUwC,EAAWhB,MAAM,KAAK,GAAGA,MAAM,KAAK,GAC9CvC,UAAWC,EAAaC,GACzB,EACD0D,UAAWhD,IChDf,SAASmD,EACPC,GAEA,OAAO,SAACC,GACN,IAAMC,EAAkBb,EAAiBN,KAAK,SAACa,GAC7C,OAAAA,EAAUvB,MAAMY,KAAKgB,EAAMV,WAAW,GAGlCY,GACW,MAAfD,OAAe,EAAfA,EAAiBN,YAAaI,EAEhC,GAAmB,MAAfE,GAAAA,EAAiBZ,eAAgB,CACnC,IAAMc,EAAQhD,EAAQ6C,CAAAA,EAAAA,EAAUC,EAAgBZ,eAAeW,IAC/D,OAAOnE,EAAC,QAAAC,cAAAoE,EAAS/C,EAAA,CAAA,EAAKgD,GACvB,CAED,OAAOtE,EAAAA,QAACC,cAAAoE,EAAS/C,EAAK6C,GAAAA,GACxB,CACF,yCCNaI,EAA4B,SAACJ,GACxC,IAAQK,EAA+CL,EAA/CK,MAAOC,EAAwCN,EAAxCM,sBAA0BC,EAASC,EAAKR,EAAKS,GACpDC,EAA4DH,EAA5DG,KAAMzE,EAAsDsE,EAAtDtE,YAAakD,EAAyCoB,EAAzCpB,KAAM/B,EAAmCmD,EAAnCnD,KAAMkC,EAA6BiB,EAA7BjB,WAAYqB,EAAiBJ,EAAjBI,aAC7CC,EAAuB5E,EAAaC,GAE1C,GAAIkD,IAASzD,kBAAUmF,QAAS,CAAA,IAAAC,EACxB/D,EACoB,UAAxB+D,OAAAA,EAAAd,EAAMe,cAAND,EAAAA,EAAe3B,MACX,CACElC,OAAQ,SACRC,IAAK,cAEP,CAAA,EAEN,GACEmD,GACAC,GACAA,EAAsB5E,QAASA,UAACmF,SAChC,CACA,IAAMX,EAAYI,EAAsB5E,QAASA,UAACmF,SAClD,OAAOhF,EAAAA,sBAACqE,EAAS,CAACG,MAAOA,GAC1B,CACD,OACExE,EACE,QAAAC,cAAA,IAAAqB,EAAApB,CAAAA,yBAA0B6E,EAC1BxD,KAAMA,GACFL,GAEHuC,EAGN,CAED,IAAKoB,EAAM,OAAW,KAEtB,IAAIM,EAAwBnF,EAAAA,QAACC,cAAAmF,EAAQA,cAAEP,EAAKQ,SAkB5C,GAhBIN,IACFI,EAAUnF,UAAMC,cAAA,OAAA,CAAAC,UAAW6E,GAAuBF,EAAKQ,UAGrDjF,EAAYC,KACd8E,EAAUnF,EAAQ,QAAAC,cAAA,SAAA,CAAAC,UAAW6E,GAAuBF,EAAKQ,SAChDjF,EAAYE,KACrB6E,EAAUnF,EAAAA,QAAMC,cAAA,OAAA,CAAAC,UAAW6E,GAAuBF,EAAKQ,SAC9CjF,EAAYG,OACrB4E,EAAUnF,EAAI,QAAAC,cAAA,KAAA,CAAAC,UAAW6E,GAAuBF,EAAKQ,SAC5CjF,EAAYI,cACrB2E,EAAUnF,EAAG,QAAAC,cAAA,IAAA,CAAAC,UAAW6E,GAAuBF,EAAKQ,SAC3CjF,EAAYK,YACrB0E,EAAUnF,EAAAA,QAAGC,cAAA,IAAA,CAAAC,UAAW6E,GAAuBF,EAAKQ,UAGlDR,EAAKS,KAAM,CACb,IACUtE,EACN6D,EADFS,KAAQtE,IAEK,MAAXA,EAAI,IAAc8D,IACpB9D,EAAM8D,EAAa9D,EAAIuE,MAAM,KAE/BJ,EACEnF,EAAAA,QAAAC,cAACa,EAAK,CAAAE,IAAKA,EAAKd,UAAc6E,EAAoB,aAC/CI,EAGN,CAED,OAAOA,CACT,EAEelB,EAAAA,EAAoBM,GCvF7B,SAAUiB,EAAQX,GACtB,OAAOA,EACJY,WACA9E,OACA+E,cACA7B,QAAQ,OAAQ,KAChBA,QAAQ,YAAa,IACrBA,QAAQ,SAAU,KAClBA,QAAQ,MAAO,IACfA,QAAQ,MAAO,GACpB,+DCoCA,SAAS8B,EACPtB,GAEA,OAAO,SAAAtD,GACL,IAAA6E,EAAW7E,EAAX6E,YACAC,EAAS9E,EAAT8E,UACAC,EAAU/E,EAAV+E,WACAC,EAAYhF,EAAZgF,aACG5B,EAAKQ,EAAA5D,EAAA6D,GAEFoB,EAAa7B,EAAMK,MAAMwB,aAC/B,IAAKA,IAAeJ,EAClB,OAAO,KAGT,IVvCF/E,EACAoF,EUsCMC,EAA6B,CAC/BC,SAAS,EACTlF,SAAU,KACVmF,UAAW,GACXP,UAAWE,EAAe,KAAOF,MAAAA,EAAAA,EAAaL,EAC9CtF,UAAW4F,EACJlF,EACDuD,EAAMK,MAAM3D,YACTwF,KV/CbxF,EU+CsCsD,EAAMK,MAAM3D,WV9ClDoF,EU8C8DH,EV5CvDG,EAAiBpF,IAAe,SU6C/B8C,EACJ2C,OAAQ,CACNR,WAAYA,EACZtB,MAAOL,EAAMK,MACbC,sBAAuBN,EAAMM,sBAC7BmB,YAAAA,IAUJ,OANIzB,EAAMK,MAAM+B,UACdL,EAAczE,MC1EJ,SAAc0C,GAAiCqC,IAAAA,EAAAC,EACrDjC,EAAUL,EAAVK,MACFxD,EAAMwD,EAAMnC,SAElB,GAAKrB,EAAL,CAEA,IAAM0F,EAAW1F,EAAIuB,MAAM,0BAK3B,MAAO,CACLJ,KAJwB,OAAhBqE,EAAGE,MAAAA,OAAAA,EAAAA,EAAW,IAAEF,EAAI,GAK5BG,UAJ2C,OAA9BF,QAAGC,SAAAA,EAAW,GAAGjE,MAAM,KAAK,IAAEgE,EAAI,GAK/C7E,IAAK4C,EAAMoC,eACXjF,IAAKX,EAXmB,CAa5B,CDyD4B6F,CAAc1C,GAEpC+B,EAAa5E,EAAQ4E,CAAAA,EAAAA,ECzDrB,SAA0B/B,GAAiC2C,IAAAA,EAAAC,EAAAC,EACvDxC,EAAwBL,EAAxBK,MAAOM,EAAiBX,EAAjBW,aACTsB,EAAY5B,EAAMoC,eAExB,MAAO,CACLT,QAASc,QAAqB,OAAdH,EAACtC,EAAMa,cAAO,EAAbyB,EAAeX,SAChCC,UAAWA,EACXnF,SAAU8F,OAAFA,EAAEvC,EAAMa,cAAN0B,EAAAA,EAAelC,KAAKqC,IAAI,SAACrC,EAAasC,GAC9C,IAAIC,EAAgB7C,EAIpB,OAHIC,EAAM6C,4BAA8BxC,EAAKzE,YAAYE,OACvD8G,EAAgBE,GAGhBtH,EAAAA,QAACC,cAAAmH,EAAa9F,EAAA,CACZiG,IAAKJ,GACDtC,EACJC,CAAAA,aAAcA,EACdL,sBAAuBN,EAAMM,sBAC7BD,MAAOA,IAGb,GACAgD,SAAuB,OAAfR,EAAExC,EAAMa,cAAO,EAAb2B,EAAeQ,SACzBL,MAAOhD,EAAMgD,MACb1C,sBAAuBN,EAAMM,sBAEjC,CD+B6CgD,CAAgBtD,IAGlD6B,EAAahG,EAAAA,sBAACqE,EAAS/C,EAAA,CAAA,EAAK4E,IAAoBlG,EAAAA,QAACC,cAAAF,OAC1D,CACF,CE/EA,SAAS2H,EAAQ3G,GACf,OACEf,UACEC,cAAA,QAAA,CAAAqD,KAAK,WACL6C,QAJqBpF,EAAPoF,QAKdjG,mBACAyH,UAAQ,GAGd,CC8CA,IAAAC,EAAejC,EAnDf,SAAiB5E,OACfE,EAAQF,EAARE,SACAqF,EAAMvF,EAANuF,OAEAH,EAAOpF,EAAPoF,QACA1B,EAAqB1D,EAArB0D,sBAEAoD,EAA6CvB,EAAO9B,MAAhClB,EAAIuE,EAAhBhH,WAAkBiH,EAAKD,EAALC,MAAOzC,EAAOwC,EAAPxC,QAqCjC,OACErF,EAAA,QAAAC,cAAA,KAAA,CAAIC,UA1CGa,EAATb,WA2CIF,EAAAA,QAAAC,cArCS,WACX,OAAIqD,IAASzD,QAASA,UAACkI,WAEnB/H,wBAACoF,EAAAA,SAAQ,KACPpF,EAAAA,QAAAC,cAACyH,EAAQ,CAACvB,QAASA,IAClBlF,GAGIqC,IAASzD,kBAAUmI,aAAeF,EAEzC9H,EAAAA,QAAAC,cAAA,UAAA,KACED,EAAS,QAAAC,cAAA,UAAA,CAAAC,oBAAmCe,GAC5CjB,EAAAA,QAAAC,cAAA,MAAA,CAAKC,oBACF4H,EAAMZ,IAAI,SAAC1C,GACV,IAAMH,EAAYG,EAAMyD,aAAaxD,GAErC,OAAOJ,EACLrE,wBAACqE,EAAS/C,EAAKgF,CAAAA,EAAAA,EAAQiB,CAAAA,IAAK/C,EAAM0D,GAAI1D,MAAOA,KAC3C,IACN,KAKDa,EACLrF,EAAAA,QAAAC,cAAA,MAAA,KACGoF,EAAQR,KAAKqC,IAAI,SAACrC,EAAMsC,GAAK,OAC5BnH,EAAAA,QAACC,cAAAsE,EAAIjD,EAACiG,CAAAA,IAAKJ,GAAWtC,GAAQ,IAIlC7E,EAAAA,+BAAIiB,EAER,EAIS,MAGX,KCtBe0E,EA5Bf,SAAa5E,GAAmC,IAArBuF,EAAMvF,EAANuF,OACzBuB,EAAoCvB,EAAO9B,MAAvBlB,EAAIuE,EAAhBhH,WAAkBiH,EAAKD,EAALC,MAEpBK,GACJ7E,IAASzD,QAASA,UAACkI,YAAczE,IAASzD,QAASA,UAACmI,qBAEhD,IACF9H,IAPmBa,EAATb,UAmBd,OACEF,UAACC,cAXa,SAACkE,GACf,IAAQlD,EAAmBkD,EAAnBlD,SAER,OAF2BkD,EAATb,OAEFzD,QAAAA,UAAUuI,iBACxBpI,EAAA,QAAAC,cAAA,KAAA,CAAIC,UAAWiI,GAAKlH,GAEpBjB,EAAA,QAAAC,cAAA,KAAA,CAAIC,UAAWiI,GAAKlH,EAExB,EAGW,CAAAqC,KAAMA,SACZwE,SAAAA,EAAOZ,IAAI,SAACmB,UACXrI,EAAC,QAAAC,cAAAqI,EAAQhH,EAAA,GAAKgF,EAAQiB,CAAAA,IAAKc,EAAKH,GAAI1D,MAAO6D,IAAQ,GAI3D,GCrBAE,EAAe5C,EAZf,SAAa5E,GAAG,IAAWE,EAAQF,EAARE,SAAUuG,EAAQzG,EAARyG,SAC/BW,EADmBpH,EAATb,UAOd,OAJIsH,IACFW,gBAAmB3C,EAAQgC,IAI3BxH,EAAAA,QAAAC,cAAA,MAAA,KAAKD,UAAMC,cAAA,OAAA,CAAAC,UAAWiI,GAAKlH,GAE/B,KCSe0E,EAdf,SAAa5E,GAAG,IAAAU,EAAKV,EAALU,MAAOvB,EAASa,EAATb,UACrB,OAAKuB,EAOHzB,UAACC,cAAAa,EAAK,CAAAE,IALyBS,EAAzBE,IAKUzB,UAHV,UAAqB,MAATA,EAAAA,EAAa,KAFAuB,EAApBU,SAAoBV,EAAdkF,WAFA,IAWrB,GCoBehB,EAAAA,EAjCf,SAAc5E,GAMA,IAHZqF,EAASrF,EAATqF,UAEAP,EAAS9E,EAAT8E,UAEoBvC,EAHdvC,EAANuF,OAGoC9B,MAA5B3D,WACFsD,EAAK7C,EAAA,CACTpB,UAPOa,EAATb,UAQEe,SATMF,EAARE,UAUM4E,EAAY,CAAEqC,GAAIrC,EAAUO,GAAa,KAAQ,CAAA,GAGjDoC,EAAQ,WACZ,OAAIlF,IAASzD,kBAAU4I,SACdzI,EAAA,QAAAC,cAAA,KAAAqB,EAAQ6C,CAAAA,EAAAA,IACNb,IAASzD,QAAAA,UAAU6I,SACrB1I,EAAAA,QAAAC,cAAA,KAAAqB,EAAA,CAAA,EAAQ6C,IAGVnE,EAAAA,QAAAC,cAAA,KAAAqB,EAAA,CAAA,EAAQ6C,GACjB,EAEA,OAAO0B,EACL7F,6BAAGuB,KAAI,IAAMsE,EAAUO,GAAclG,UAAU,SAC7CF,UAAAC,cAACuI,EAAK,OAGRxI,EAAC,QAAAC,cAAAuI,EAAQ,KAEb,KCjBe7C,EAff,SAAc5E,GAAG,IAEJsE,EAFqBtE,EAANuF,OAExB9B,MAASa,QAGX,OAAKA,EAEHrF,EAAAA,QAAAC,cAAA,aAAA,CAAYC,UAPUa,EAATb,WAQVmF,EAAQR,KAAKqC,IAAI,SAACrC,EAAMsC,GAAK,OAC5BnH,EAAAA,QAACC,cAAAsE,EAAIjD,EAAA,CAACiG,IAAKJ,GAAWtC,GAAQ,QAItC,GCLA,SAAS8D,EAAQ5H,GAAwC,IAAnBmH,EAAEnH,EAAFmH,GACpC,OACElI,UAAIC,cAAA,KAAA,CAAAC,UAF4Ba,EAATb,WAAFa,EAAL6H,MAGP1B,IAAI,SAAC2B,EAAWC,GACrB,OAAA9I,EAAI,QAAAC,cAAA,KAAA,CAAAsH,IAAG,MAAQW,EAAE,IAAIY,GAClBD,EAAU3B,IAAI,SAACrC,EAAMkE,GAAU,OAAA/I,EAAAA,QAAAC,cAACsE,EAAIjD,KAAKuD,EAAI,CAAE0C,IAAG,QAAUW,EAAMa,IAAAA,IAAW,GAC3E,GAIb,CAsBA,MAAepD,EApBf,SAAc5B,GAAmC,IAAhC7D,EAAS6D,EAAT7D,UACf2H,EADgC9D,EAANuC,OACQ9B,MAA1Ba,EAAOwC,EAAPxC,QAASyC,EAAKD,EAALC,MACXkB,EAAOlB,MAAAA,OAAAA,EAAAA,EAAOmB,OAAO,SAAAjF,GAAG,IAAAqB,EAAOrB,EAAPqB,eAAcA,MAAAA,OAAAA,EAAAA,EAASuD,KAAK,GAE1D,IAAKI,EAAM,OAAO,KAElB,IAAMb,GAAQjI,EAAS,KAAW,MAAPmF,GAAAA,EAAS6D,gBAAkB,oBAAsB,IAC1E,KAAW,MAAP7D,GAAAA,EAAS8D,aAAe,iBAAmB,KAAKxI,OAEtD,OACEX,EAAAA,QAAAC,cAAA,QAAA,CAAOC,UAAWiI,GAChBnI,EACG,QAAAC,cAAA,QAAA,KAAA+I,EAAK9B,IAAI,SAAAkC,GAAG,IAAY/D,EAAO+D,EAAP/D,QAAS6C,EAAEkB,EAAFlB,UAChClI,EAAAA,sBAAC2I,EAAQ,CAACzI,UAAWU,EADAwI,EAAVvI,YAC0C+H,MAAOvD,EAASuD,MAAQrB,IAAKW,EAAIA,GAAIA,GAAM,IAK1G,GCnBevC,EAAAA,EAnBf,SAAgB5E,GAAmC,IAAAsI,EAEtChE,EAFuBtE,EAANuF,OAE1B9B,MAASa,QAGX,OAAKA,EAGHrF,EAAAA,QAAAC,cAAA,MAAA,CAAKC,UARmBa,EAATb,WASA,OADUmJ,EACtBhE,EAAQiE,WAAI,EAAZD,EAAcE,MACfvJ,EAAA,QAAAC,cAAA,OAAA,KACGoF,EAAQR,KAAKqC,IAAI,SAACrC,EAAMsC,GACvB,OAAAnH,EAAAA,QAACC,cAAAsE,EAAIjD,EAAA,CAACiG,IAAKJ,GAAWtC,GAAQ,KAPb,IAY3B,GCdA2E,EAAe7D,EAJf,SAAkB5E,GAChB,OAAOf,wBAACA,EAAK,QAACoF,SAAU,KADGrE,EAARE,SAErB,KCAe0E,EAJf,SAAkB5E,GAChB,OAAOf,6BAAGE,UAD4Ba,EAATb,WAAFa,EAARE,SAErB,GCHe0E,EAAAA,EAAsBnE,GCAtBmE,EAAAA,EAAsB5C,GCAtB4C,EAAAA,EAAsB9D,GCIrC,SAAS4H,EAAS1I,OAAI8E,EAAS9E,EAAT8E,UAAWO,EAASrF,EAATqF,UAC/B,OAAKP,EAGH7F,EAAA,QAAAC,cAAA,IAAA,CAAGsB,SAAUsE,EAAUO,IACpBA,GAJkBpG,wBAACA,EAAAA,QAAMoF,SAAU,KAAAgB,EAO1C,CAgBA,IC/BAsD,ID+Be/D,EAdf,SAAwB5B,OAAcoD,EAAKpD,EAALoD,MAAOtB,EAAS9B,EAAT8B,UAC3C,OAAKsB,EAGHnH,EAAA,QAAAC,cAAA,KAAA,CAAIC,UAJ4B6D,EAAT7D,WAKpBiH,EAAMD,IAAI,SAAAlD,GAAG,IAAIoC,EAASpC,EAAToC,UAChB,OAAApG,EAAAA,4BAAIuH,IADUvD,EAAFkE,GACChI,UAAWU,EADOoD,EAAJV,OAEzBtD,EAAAA,QAAAC,cAACwJ,EAAS,CAAC5D,UAAWA,EAAWO,UAAWA,IACzC,QAIb,GCVauD,IAAqBD,EAAA,CAAA,GAC/B7J,QAAAA,UAAU+J,WAAYC,EAASH,EAC/B7J,QAAAA,UAAUiK,UAAWtB,EAAKkB,EAC1B7J,QAAAA,UAAU4I,UAAWD,EAAKkB,EAC1B7J,QAASA,UAAC6I,UAAWF,EAAKkB,EAC1B7J,QAASA,UAACkK,WAAYC,EAAIN,EAC1B7J,QAAAA,UAAUoK,WAAYD,EAAIN,EAC1B7J,QAAAA,UAAUuI,kBAAmB4B,EAAIN,EACjC7J,QAAAA,UAAUkI,YAAaiC,EAAIN,EAC3B7J,QAASA,UAACmI,aAAcgC,EAAIN,EAC5B7J,QAASA,UAACqK,OAAQnH,EAAK2G,EACvB7J,QAAAA,UAAUsK,MAAOC,EAAIV,EACrB7J,QAAAA,UAAUwK,KAAMxI,EAAK6H,EACrB7J,QAAAA,UAAUyK,OAAQzI,EAAK6H,EACvB7J,QAASA,UAAC0K,OAAQC,EAASd,EAC3B7J,QAASA,UAAC4K,OAAQjJ,EAAKkI,EACvB7J,QAAAA,UAAU6K,SAAUC,EAAOjB,EAC3B7J,QAAAA,UAAU+K,OAAQC,EAAKnB,EACvB7J,QAAAA,UAAUiL,SCnCG,kBAAM9K,kCAAM,EDmCE0J,EAC3B7J,QAASA,UAACkL,MAAOC,EAAItB,EACrB7J,QAASA,UAACoL,mBAAoBC,EAAexB,EAC7C7J,QAAAA,UAAUsL,OAAQC,EAAK1B,EACvB7J,QAAAA,UAAUwL,gBAAY1H,EAAS+F,EAC/B7J,QAAAA,UAAUyL,mBAAe3H,EAAS+F,EAClC7J,QAASA,UAAC0L,eAAW5H,EAAS+F,EAC9B7J,QAASA,UAAC2L,iBAAa7H,EAAS+F,GErCtB+B,0BA0BX,SAAAA,EAAYC,EAA4BC,GAzBxCzD,KAAAA,QACArH,EAAAA,KAAAA,gBACAiH,EAAAA,KAAAA,WACAzC,EAAAA,KAAAA,eAuBE,IAAMxE,EAAa6K,EAAcpI,KAC3B+B,EAAUqG,EAAc7K,GAE9B,GAAKA,GAAewE,EAKpB,GAHAuG,KAAK1D,GAAKwD,EAAcxD,GACxB0D,KAAK/K,WAAaA,EAEd6K,EAAcpI,OAASzD,QAASA,UAAC0K,OAAS,UAAWmB,EACvDE,KAAK9D,MAAQ,KACb8D,KAAKvG,QAAU,CAAER,KAAM6G,EAAc3J,YAC5B2J,GAAAA,EAAcpI,OAASzD,QAASA,UAAC2L,WAC1CI,KAAK9D,MAAQ,KACb8D,KAAKvG,QAAU,CAAER,KAAM,CAACQ,EAAQtD,aACvB,GAAA6J,KAAKC,WAAaF,EAC3BC,KAAKvG,QAAU,KACfuG,KAAK9D,MAAQ,CAAC,IAAI2D,EAAYC,GAAe,QACxC,CAAAI,IAAAA,EAAAC,EAAAhL,EAEHiL,EAaE3G,EAbF2G,UACAnH,EAYEQ,EAZFR,KACAsB,EAWEd,EAXFc,QACA8F,EAUE5G,EAVF4G,QACA3I,EASE+B,EATF/B,KACA4I,EAQE7G,EARF6G,SACAC,EAOE9G,EAPF8G,KACAnL,EAMEqE,EANFrE,IACAsI,EAKEjE,EALFiE,KACA9B,EAIEnC,EAJFmC,SACA4E,EAGE/G,EAHF+G,kBACAC,EAEEhH,EAFFgH,eACAzD,EACEvD,EADFuD,MAGFgD,KAAK9D,MAGFgE,OAHOA,EACQ,OADRC,EACR1G,EAAQpE,eAAQ,EAAhB8K,EAAkB7E,IAChB,SAACoF,GAAkB,OAAS,IAAAb,EAAYa,GAAO,EAAK,IACrDR,EAAI,KACPF,KAAKvG,QAAU,CACbR,KAAuB,OAAnB9D,EAAEiL,MAAAA,EAAAA,EAAanH,GAAI9D,EAAI,GAC3BoF,QAAAA,EACA8F,QAAAA,EACA3I,KAAAA,EACA4I,SAAAA,EACAC,KAAAA,EACAnL,IAAAA,EACAsI,KAAAA,EACA9B,SAAAA,EACA0B,gBAAiBkD,EACjBjD,aAAckD,EACdzD,MAAAA,EAEH,CACH,CAAC,IAAA2D,EAAAd,EAAAe,UA0GA,OA1GAD,EAEDtE,aAAA,SAAawE,GAEX,OADYnL,EAAA,CAAA,EAAQqI,EAA0B8C,GAChCb,KAAK/K,WACrB,EAAC0L,EAEDlK,OAAA,WAAM,IAAAqK,EACJ,IAAKd,KAAKvG,QAAS,OAAO,KAE1B,IAAIrE,EAAM,KAEV,GAAI4K,KAAKe,UACP3L,EAAM4K,KAAKvG,QAAQrE,SACd,GAAI4K,KAAKrF,WAAamG,OAAJA,EAAId,KAAKvG,UAALqH,EAAcpJ,KAAM,CAAA,IAAAsJ,EAC/C5L,EAAqC,OAAlC4L,EAAGhB,KAAKvG,QAAQuG,KAAKvG,QAAQ/B,YAAK,EAA/BsJ,EAAiC5L,GACxC,CACD,OAAOA,GAAO,IAChB,EAACuL,EAEDM,QAAA,WACE,OAAQjB,KAAK/K,YACX,KAAKhB,QAASA,UAACmI,YACf,KAAKnI,QAAAA,UAAUkK,UACf,KAAKlK,QAAAA,UAAUkI,WACf,KAAKlI,QAASA,UAACoK,UACb,MAAO,OACT,KAAKpK,kBAAUiK,SACf,KAAKjK,QAASA,UAAC4I,SACf,KAAK5I,QAAAA,UAAU6I,SACb,MAAO,QACT,KAAK7I,QAASA,UAACsK,KACf,KAAKtK,QAAAA,UAAUqK,MACf,KAAKrK,QAASA,UAAC4K,MACf,KAAK5K,QAASA,UAACwK,IACf,KAAKxK,QAAAA,UAAUyK,MACb,MAAO,QACT,KAAKzK,QAAAA,UAAUyL,aACb,MAAO,YACT,KAAKzL,QAAAA,UAAUsL,MACf,KAAKtL,QAASA,UAACoL,kBACb,MAAO,QACT,KAAKpL,QAAAA,UAAUkL,KACb,MAAO,OACT,QACE,MAAO,UAEb,EAACwB,EAED3F,aAAA,WAAYkG,IAAAA,EAAAC,EAAAC,EACJC,EAAgBrB,KAAKrF,UACvBuG,OADgCA,EAChClB,KAAKvG,cAALyH,EAAAA,EAAcb,QACF,OADSc,EACrBnB,KAAKvG,cAAO,EAAZ0H,EAAclI,KAElB,OAAoE,OAApEmI,EAAOC,MAAAA,OAAAA,EAAAA,EAAe/F,IAAI,SAACrC,GAAU,OAAKA,EAAKpB,UAAU,GAAEd,KAAK,MAAIqK,EAAI,EAC1E,EAACT,EAEDV,OAAA,WACE,MAA0B,SAAnBD,KAAKiB,SACd,EAACN,EAEDW,OAAA,WACE,MAA0B,cAAdL,SACd,EAACN,EAEDY,QAAA,WACE,MAA0B,UAAfvB,KAACiB,SACd,EAACN,EAEDhG,QAAA,WACE,MAA0B,eAAdsG,SACd,EAACN,EAEDI,QAAA,WACE,MAA0B,UAAff,KAACiB,WAAyBjB,KAAK/K,aAAehB,QAASA,UAACyK,KACrE,EAACiC,EAEDa,YAAA,WACE,MAA0B,mBAAdP,SACd,EAACN,EAEDc,QAAA,WACE,MAA0B,UAAfzB,KAACiB,SACd,EAACN,EAEDe,WAAA,SAAWhK,GACT,YAAYzC,aAAeyC,CAC7B,EAACiJ,EAEDgB,QAAA,SAAQ/I,GACDoH,KAAK9D,QAAO8D,KAAK9D,MAAQ,IAE9B8D,KAAK9D,MAAM0F,KAAK,IAAI/B,EAAYjH,GAAO,GACzC,EAAC+H,EAEDvG,WAAA,WAAUyH,IAAAA,EACR,OACM7B,KAACvJ,UAC0B,KAA/BuJ,KAAKhF,eAAejG,SACV,OADuB8M,EACjC7B,KAAK9D,YAAK,EAAV2F,EAAYC,SACZ9B,KAAKyB,SAET,EAACd,EAEDlF,wBAAA,WACE,OAAQuE,KAAKsB,QACf,EAACzB,CAAA,aCnLqBkC,EAAkBC,GACxC,IAAMC,EAAcD,EAAO3E,OACzB,SAAAlI,UAAOA,EAAJuC,OAAoBxD,CAAgB,GAGzC,IAAK+N,EAAYH,OAAQ,MAAO,GAIhC,IAFA,IAjBkBI,EAAuBC,EAiBnCC,EAA8B,GAE3BlF,EAAI,EAAGA,EAAI+E,EAAYH,OAAQ5E,IAAK,CAC3C,IAAMmF,EAAgBD,EAAaA,EAAaN,OAAS,GACnDlJ,EAAQ,IAAIiH,EAAYoC,EAAY/E,IAEtCmF,IAvBmCF,EAuBQvJ,GAvB/BsJ,EAuBgBG,GAtBlBpC,UAAYiC,EAASR,WAAWS,EAAQlN,aAuBpDoN,EAAcV,QAAQM,EAAY/E,IAE9BtE,EAAM4I,eAAiB5I,EAAMsD,MAC/BkG,EAAaR,KAAIU,MAAjBF,EAAqBxJ,EAAMsD,OAE3BkG,EAAaR,KAAKhJ,EAGvB,CAED,OAAOwJ,CACT,CCpCM,SAAUG,EAAeP,GAI7B,QAJkDQ,EAC5CC,EAAeT,EAAO1G,IAAI,SAAA1C,GAAK,WAAQiH,EAAYjH,EAAM,GACzD8J,EAAS,GAENxF,EAAI,EAAGA,EAAIuF,EAAaX,OAAQ5E,IACnCuF,EAAavF,GAAGqE,UAClBmB,EAAOd,KAAKa,EAAavF,IAChBuF,EAAavF,GAAGsE,eAAiBiB,EAAavF,GAAGhB,OAC1DwG,EAAOd,KAAIU,MAAXI,EAAeD,EAAavF,GAAGhB,MAAOmB,OAAO,SAAAzE,UAASA,EAAM2I,SAAS,IAIzE,OAKGiB,OALHA,EAAOE,EAAOpH,IAAI,SAACnF,OAAKwM,EAAA,MAAM,CAC5BrG,GAAInG,EAAMmG,GACV5E,KAAMvB,EAAMlB,WACZgE,KAAM0J,OAAFA,EAAExM,EAAMsD,cAANkJ,EAAAA,EAAe1J,KACrBuB,UAAWrE,EAAM6E,eAClB,IAAEwH,EAAI,EACT,sCCAA,SAAerN,GACb,IAAA6M,EAAM7M,EAAN6M,OAAMY,EAAAzN,EACN+E,WAAAA,OAAa,IAAH0I,EAAG,CAAE,EAAAA,EACf5I,EAAW7E,EAAX6E,YACA6I,EAAS1N,EAAT0N,UACA5I,EAAS9E,EAAT8E,UACAf,EAAY/D,EAAZ+D,aACAiB,EAAYhF,EAAZgF,aACAtB,EAAqB1D,EAArB0D,sBAEA,IAAKmJ,IAAWA,EAAOF,OAAQ,OAAO,KAEtC,IAAMgB,EAAef,EAAkBC,GACjCzG,EAAQgH,EAAeP,GAW7B,OACE5N,EAAC,QAAAC,cAVa,SAACkE,GACf,IAAmBlD,EAAakD,EAAblD,SACnB,OADgCkD,EAAxBsK,UAENzO,EAAAA,6BAAKE,UAAU,iBAAiBe,GAEhCjB,EAAC,QAAAC,cAAAD,EAAK,QAACoF,SAAU,KAAAnE,EAErB,EAGW,CAAAwN,YAAaA,GACnBC,EAAaxH,IAAI,SAAC1C,GACjB,IAAMH,EAAYG,EAAMyD,aAAaxD,GAErC,OAAOJ,EACLrE,EAAAA,QAACC,cAAAoE,EACC,CAAAkD,IAAK/C,EAAM0D,GACXpC,WAAYA,EACZF,YAAaA,EACbpB,MAAOA,EACPqB,UAAWA,EACXf,aAAcA,EACdiB,aAAcA,EACdoB,MAAOA,EACP1C,sBAAuBA,IAEvB,IACN,GAGN"}