{"version":3,"file":"index.modern.mjs","sources":["../src/types/BlockTypes.ts","../src/components/common/EmptyBlock/index.tsx","../src/utils/getClassname.ts","../src/components/common/Link/index.tsx","../src/components/common/Image/index.tsx","../src/components/common/Embed/index.tsx","../src/components/common/Video/constants.tsx","../src/components/common/Video/index.tsx","../src/hoc/withCustomComponent/constants.ts","../src/hoc/withCustomComponent/index.tsx","../src/components/core/Text/index.tsx","../src/utils/slugify.ts","../src/hoc/withContentValidation/index.tsx","../src/hoc/withContentValidation/constants.tsx","../src/components/common/List/components/Checkbox/index.tsx","../src/components/common/List/components/ListItem/index.tsx","../src/components/common/List/index.tsx","../src/components/common/Code/index.tsx","../src/components/common/File/index.tsx","../src/components/common/Title/index.tsx","../src/components/common/Quote/index.tsx","../src/components/common/Table/index.tsx","../src/components/common/Callout/index.tsx","../src/components/common/DummyText/index.tsx","../src/components/common/Paragraph/index.tsx","../src/components/common/Image/wrappedImage.tsx","../src/components/common/Video/wrappedVideo.tsx","../src/components/common/Embed/wrappedEmbed.tsx","../src/components/common/TableOfContents/index.tsx","../src/constants/BlockComponentsMapper/index.ts","../src/components/common/Divider/index.tsx","../src/types/Block.ts","../src/utils/getBlocksToRender.ts","../src/utils/indexGenerator.ts","../src/components/core/Render/index.tsx"],"sourcesContent":["export enum blockEnum {\n  HEADING1 = 'heading_1',\n  HEADING2 = 'heading_2',\n  HEADING3 = 'heading_3',\n  PARAGRAPH = 'paragraph',\n  TOGGLE_LIST = 'toggle',\n  DOTS_LIST = 'bulleted_list_item',\n  ENUM_LIST = 'numbered_list_item',\n  ENUM_LIST_PARENT = 'numbered_list',\n  CHECK_LIST = 'to_do',\n  TITLE = 'title',\n  VIDEO = 'video',\n  IMAGE = 'image',\n  EMBED = 'embed',\n  FILE = 'file',\n  PDF = 'pdf',\n  BOOKMARK = 'bookmark',\n  CALLOUT = 'callout',\n  QUOTE = 'quote',\n  DIVIDER = 'divider',\n  CODE = 'code',\n  SYNCED_BLOCK = 'synced_block',\n  TABLE_OF_CONTENTS = 'table_of_contents',\n  TABLE = 'table',\n  TABLE_ROW = 'table_row',\n  CHILD_PAGE = 'child_page',\n  MENTION = 'mention'\n}\n\nexport const UNSUPPORTED_TYPE = 'unsupported'\n","import React from 'react'\n\nfunction EmptyBlock() {\n  return (\n    <div className=\"rnr-empty-block\"/>\n  )\n}\n\nexport default EmptyBlock\n","import { blockEnum } from '..'\nimport { ClassnamesType } from '../constants/BlockComponentsMapper/types'\nimport Text from '../types/Text'\n\nconst DEFAULT_COLOR = 'default'\n\nexport function getClassname(annotations: Text['annotations']) {\n  return `\n  ${annotations.bold ? 'rnr-bold' : ''}\n  ${annotations.code ? 'rnr-inline-code' : ''}\n  ${annotations.italic ? 'rnr-italic' : ''}\n  ${annotations.strikethrough ? 'rnr-strikethrough' : ''}\n  ${annotations.underline ? 'rnr-underline' : ''}\n  ${annotations.color !== DEFAULT_COLOR ? `rnr-${annotations.color}` : ''}\n`.trim()\n}\n\nexport function blockTypeClassname(notionType: blockEnum) {\n  return `rnr-${notionType}`\n}\n\nexport function blockTypeCustomClassname(\n  notionType: blockEnum,\n  classnameMapping: ClassnamesType\n) {\n  return classnameMapping[notionType] || ''\n}\n","import React from 'react'\n\nexport interface Props {\n  url: string\n  children: React.ReactNode\n  className?: string\n}\n\nfunction Link({ url, children, className }: Props) {\n  const redirectProps = url.startsWith('#')\n    ? {}\n    : {\n        target: '_blank',\n        rel: 'noreferrer'\n      }\n  return (\n    <a href={url} className={className} {...redirectProps}>\n      {children}\n    </a>\n  )\n}\n\nexport default Link\n","import React from 'react'\nimport { DropedProps } from '../../../hoc/withContentValidation'\n\nexport interface Props {\n  className?: string\n  media?: DropedProps['media']\n}\n\nfunction Image({ className, media }: Props) {\n  if (!media) return null\n  const { src, alt, href } = media\n\n  const img = <img className={className} src={src} alt={alt} />\n\n  return href\n    ? (\n    <a href={href} target='_blank' rel='noreferrer'>\n      {img}\n    </a>\n      )\n    : (\n        img\n      )\n}\n\nexport default Image\n","import React from 'react'\nimport { DropedProps } from '../../../hoc/withContentValidation'\n\nexport type Props = {\n  className?: string\n  media?: DropedProps['media']\n  frameBorder?: string\n  allow?: string\n  allowFullScreen?: boolean\n}\n\nfunction Embed({\n  media,\n  className,\n  frameBorder,\n  allow,\n  allowFullScreen\n}: Props) {\n  if (!media) return null\n\n  const { src, alt } = media\n\n  return (\n    <iframe\n      src={src}\n      title={alt}\n      className={`block ${className}`}\n      frameBorder={frameBorder ?? '0'}\n      allow={allow}\n      allowFullScreen={allowFullScreen}\n    />\n  )\n}\n\nexport default Embed\n","import React from 'react'\nimport Embed from '../Embed'\n\nconst MATCHERS = [\n  {\n    name: 'youtube',\n    REGEXP:\n      /(?:youtu\\.be\\/|youtube\\.com(?:\\/embed\\/|\\/v\\/|\\/watch\\?v=|\\/user\\/\\S+|\\/ytscreeningroom\\?v=))([\\w\\-]{10,12})\\b/,\n    getUrl: (src: string) => {\n      const GET_ID =\n        /(?:youtu\\.be\\/|youtube\\.com(?:\\/embed\\/|\\/v\\/|\\/watch\\?v=|\\/user\\/\\S+|\\/ytscreeningroom\\?v=|\\/sandalsResorts#\\w\\/\\w\\/.*\\/))([^\\/&]{10,12})/\n      const id = src.match(GET_ID)?.[1]\n      return `https://www.youtube.com/embed/${id}`\n    }\n  },\n  {\n    name: 'googleDrive',\n    REGEXP: /drive.google.com/,\n    getUrl: (src: string) => {\n      const videoUrl = src.split('/')\n      videoUrl.pop()\n      return `${videoUrl.join('/')}/preview`\n    }\n  }\n]\n\nexport function getPlayer(src: string, alt: string, className?: string) {\n  const match = MATCHERS.find((option) => option.REGEXP.test(src))\n\n  if (!match) return null\n\n  return PLAYERS[match.name](\n    match.getUrl ? match.getUrl(src) : src,\n    alt,\n    className\n  )\n}\n\nconst PLAYERS = {\n  youtube: (url: string, title: string, className?: string) => (\n    <Embed\n      media={{ alt: title, src: url }}\n      className={className}\n      allow='accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture'\n      allowFullScreen\n    />\n  ),\n  googleDrive: (url: string, title: string, className?: string) => (\n    <Embed\n      media={{ alt: title, src: url }}\n      className={className}\n      allow='autoplay'\n    />\n  )\n}\n\nexport default PLAYERS\n","import React from 'react'\nimport { DropedProps } from '../../../hoc/withContentValidation'\nimport { getPlayer } from './constants'\n\nexport type Props = {\n  className?: string\n  media?: DropedProps['media']\n}\n\nfunction Video({ media, className }: Props) {\n  if (!media) return null\n\n  const { src, alt } = media\n\n  const player = getPlayer(src, alt, className)\n\n  return (\n    player ?? (\n      <video className={className} controls>\n        <source src={src} type='video/mp4' />\n        {alt}\n      </video>\n    )\n  )\n}\n\nexport default Video\n","import React from 'react'\n\nimport Text from '../../types/Text'\nimport { getClassname } from '../../utils/getClassname'\n\nimport Image, { Props as ImageProps } from '../../components/common/Image'\nimport Link, { Props as LinkProps } from '../../components/common/Link'\nimport Video, { Props as VideoProps } from '../../components/common/Video'\n\ntype WrappedComponentPropsType = Text\nexport type CustomComponentPropsType = ImageProps | LinkProps | VideoProps\n\ninterface CustomComponent {\n  match: RegExp\n  component: React.ComponentType<CustomComponentPropsType>\n  transformProps?: (\n    props: WrappedComponentPropsType\n  ) => CustomComponentPropsType\n}\n\nexport const customComponents: CustomComponent[] = [\n  {\n    match: /-\\[[^\\]]*\\]\\((.*?)\\s*(\"(?:.*[^\"])\")?\\s*\\)/,\n    // eslint-disable-next-line camelcase\n    transformProps: ({ plain_text }) => ({\n      media: {\n        alt: plain_text.split('-[')[1].split(']')[0],\n        src: plain_text.split('(')[1].split(')')[0],\n        player: plain_text.indexOf('#') < 0 ? undefined : plain_text.substr(plain_text.indexOf('#')).replace('#', '')\n      }\n    }),\n    component: Video\n  },\n  {\n    match: /!\\[[^\\]]*\\]\\((.*?)\\s*(\"(?:.*[^\"])\")?\\s*\\)/,\n    // eslint-disable-next-line camelcase\n    transformProps: ({ plain_text }) => ({\n      media: {\n        alt: plain_text.split('![')[1].split(']')[0],\n        src: plain_text.split('(')[1].split(')')[0],\n        href: plain_text.indexOf('#') < 0 ? undefined : plain_text.substr(plain_text.indexOf('#')).replace('#', '')\n      }\n    }),\n    component: Image\n  },\n  {\n    match: /[[^\\]]*\\]\\((.*?)\\s*(\"(?:.*[^\"])\")?\\s*\\)/,\n    // eslint-disable-next-line camelcase\n    transformProps: ({ plain_text, annotations }) => ({\n      url: plain_text.split('(')[1].split(')')[0],\n      children: plain_text.split('[')[1].split(']')[0],\n      className: getClassname(annotations)\n    }),\n    component: Link\n  }\n]\n","import React from 'react'\n\nimport Text from '../../types/Text'\nimport { CustomComponentPropsType, customComponents } from './constants'\n\nfunction withCustomComponent<PropsType extends object>(\n  TempComponent: React.ComponentType<PropsType>\n): React.FC<PropsType> {\n  return (props: PropsType & Text) => {\n    const customComponent = customComponents.find((component) =>\n      component.match.test(props.plain_text)\n    )\n\n    const Component: React.ComponentType<PropsType | CustomComponentPropsType> =\n      customComponent?.component || TempComponent\n\n    if (customComponent?.transformProps) {\n      const newProps = { ...props, ...customComponent.transformProps(props) }\n      return <Component {...newProps} />\n    }\n\n    return <Component {...props} />\n  }\n}\n\nexport default withCustomComponent\n","/* eslint-disable camelcase */\nimport React, { Fragment, ReactElement } from 'react'\n\nimport IText from '../../../types/Text'\nimport { getClassname } from '../../../utils/getClassname'\nimport Link from '../../common/Link'\nimport withCustomComponent from '../../../hoc/withCustomComponent'\nimport { BlockComponentsMapperType } from '../../../constants/BlockComponentsMapper/types'\nimport { ParsedBlock } from '../../../types/Block'\nimport { blockEnum } from '../../../types/BlockTypes'\n\ntype PropTypes = IText & {\n  blockComponentsMapper?: BlockComponentsMapperType\n  block?: ParsedBlock\n}\n// Need to get the component mapping into here\n// I want additional page info to be available...\nexport const Text: React.FC<PropTypes> = (props: PropTypes) => {\n  const { block, blockComponentsMapper, ...textProps } = props\n  const { text, annotations, type, href, plain_text, mapPageUrlFn } = textProps\n  const annotationsClassName = getClassname(annotations)\n\n  if (type === blockEnum.MENTION) {\n    const redirectProps =\n      props.mention?.type === 'page'\n        ? {\n            target: '_blank',\n            rel: 'noreferrer'\n          }\n        : {}\n\n    if (\n      block &&\n      blockComponentsMapper &&\n      blockComponentsMapper[blockEnum.MENTION]\n    ) {\n      const Component = blockComponentsMapper[blockEnum.MENTION]\n      return <Component block={block!} />\n    }\n    return (\n      <a\n        className={`rnr-mention ${annotationsClassName}`}\n        href={href}\n        {...redirectProps}\n      >\n        {plain_text}\n      </a>\n    )\n  }\n\n  if (!text) return null\n\n  let element: ReactElement = <Fragment>{text.content}</Fragment>\n\n  if (annotationsClassName)\n    element = <span className={annotationsClassName}>{text.content}</span>\n\n  // could havle multiple...\n  if (annotations.bold) {\n    element = <strong className={annotationsClassName}>{text.content}</strong>\n  } else if (annotations.code) {\n    element = <code className={annotationsClassName}>{text.content}</code>\n  } else if (annotations.italic) {\n    element = <em className={annotationsClassName}>{text.content}</em>\n  } else if (annotations.strikethrough) {\n    element = <s className={annotationsClassName}>{text.content}</s>\n  } else if (annotations.underline) {\n    element = <u className={annotationsClassName}>{text.content}</u>\n  }\n\n  if (text.link) {\n    let {\n      link: { url }\n    } = text\n    if (url[0] === '/' && mapPageUrlFn) {\n      url = mapPageUrlFn(url.slice(1))\n    }\n    element = (\n      <Link url={url} className={`${annotationsClassName} rnr-link`}>\n        {element}\n      </Link>\n    )\n  }\n\n  return element\n}\n\nexport default withCustomComponent(Text)\n/* eslint-enable camelcase */\n","export function slugify(text: string) {\n  return text\n    .toString()\n    .trim()\n    .toLowerCase()\n    .replace(/\\s+/g, '-')\n    .replace(/[^\\w\\-]+/g, '')\n    .replace(/\\-\\-+/g, '-')\n    .replace(/^-+/, '')\n    .replace(/-+$/, '')\n}\n","import React, { PropsWithChildren } from 'react'\n\nimport { ParsedBlock, SimpleBlock } from '../../types/Block'\n\nimport EmptyBlock from '../../components/common/EmptyBlock'\nimport { getDefaultProps, getMediaProps } from './constants'\nimport { slugify } from '../../utils/slugify'\nimport {\n  blockTypeClassname,\n  blockTypeCustomClassname\n} from '../../utils/getClassname'\nimport {\n  BlockComponentsMapperType,\n  ClassnamesType\n} from '../../constants/BlockComponentsMapper/types'\n\nexport interface WithContentValidationProps {\n  classNames?: ClassnamesType\n  emptyBlocks?: boolean\n  block: ParsedBlock\n  slugifyFn?: (text: string) => string\n  mapPageUrlFn?: (input: any) => string\n  simpleTitles?: boolean\n  index?: SimpleBlock[]\n  blockComponentsMapper?: BlockComponentsMapperType\n}\n\nexport type DropedProps = PropsWithChildren<{\n  className?: string\n  checked: boolean\n  plainText: string\n  config: WithContentValidationProps\n  slugifyFn: ((text: string) => string) | null\n  language?: string\n  media?: {\n    alt: string\n    src: string\n    href?: string\n    name?: string\n    extension?: string\n    player?: string\n  }\n  index?: SimpleBlock[]\n  blockComponentsMapper?: BlockComponentsMapperType\n}>\n\nfunction withContentValidation(\n  Component: React.ComponentType<DropedProps>\n): React.FC<WithContentValidationProps> {\n  return ({\n    emptyBlocks,\n    slugifyFn,\n    classNames,\n    simpleTitles,\n    ...props\n  }: WithContentValidationProps) => {\n    const hasContent = props.block.hasContent()\n    if (!hasContent && !emptyBlocks) {\n      return null\n    }\n\n    let returnedProps: DropedProps = {\n      checked: false,\n      children: null,\n      plainText: '',\n      slugifyFn: simpleTitles ? null : slugifyFn ?? slugify,\n      className: classNames\n        ? `${blockTypeClassname(\n            props.block.notionType\n          )} ${blockTypeCustomClassname(props.block.notionType, classNames)}`\n        : undefined,\n      config: {\n        classNames: classNames,\n        block: props.block,\n        blockComponentsMapper: props.blockComponentsMapper,\n        emptyBlocks\n      }\n    }\n\n    if (props.block.isMedia()) {\n      returnedProps.media = getMediaProps(props)\n    } else {\n      returnedProps = { ...returnedProps, ...getDefaultProps(props) }\n    }\n\n    return hasContent ? <Component {...returnedProps} /> : <EmptyBlock />\n  }\n}\n\nexport default withContentValidation\n","import React from 'react'\nimport { WithContentValidationProps } from '.'\nimport IText from '../../types/Text'\n\nimport WrappedText, { Text } from '../../components/core/Text'\n\nexport function getMediaProps(props: WithContentValidationProps) {\n  const { block } = props\n  const url = block.getUrl()\n\n  if (!url) return undefined\n\n  const urlParts = url.match(/\\/?([^/.]*)\\.?([^/]*)$/)\n\n  const name = urlParts?.[1] ?? ''\n  const extension = urlParts?.[2].split('?')[0] ?? ''\n\n  return {\n    name,\n    extension,\n    alt: block.getPlainText(),\n    src: url\n  }\n}\n\nexport function getDefaultProps(props: WithContentValidationProps) {\n  const { block, mapPageUrlFn } = props\n  const plainText = block.getPlainText()\n\n  return {\n    checked: Boolean(block.content?.checked),\n    plainText: plainText,\n    children: block.content?.text.map((text: IText, index: number) => {\n      let TextComponent = Text\n      if (block.supportCustomComponents() && !text.annotations.code) {\n        TextComponent = WrappedText\n      }\n      return (\n        <TextComponent\n          key={index}\n          {...text}\n          mapPageUrlFn={mapPageUrlFn}\n          blockComponentsMapper={props.blockComponentsMapper}\n          block={block}\n        />\n      )\n    }),\n    language: block.content?.language,\n    index: props.index,\n    blockComponentsMapper: props.blockComponentsMapper\n  }\n}\n","import React from 'react'\n\nimport styles from '../../styles.module.css'\n\ninterface Props {\n  checked?: boolean\n}\n\nfunction Checkbox({ checked }: Props) {\n  return (\n    <input\n      type='checkbox'\n      checked={checked}\n      className={styles.check}\n      readOnly\n    />\n  )\n}\n\nexport default Checkbox\n","import React, { Fragment } from 'react'\n\nimport { blockEnum } from '../../../../../types/BlockTypes'\nimport withContentValidation, {\n  DropedProps\n} from '../../../../../hoc/withContentValidation'\n\nimport styles from '../../styles.module.css'\n\nimport Checkbox from '../Checkbox'\nimport { Text } from '../../../../core/Text'\n\nfunction ListItem({\n  children,\n  config,\n  className,\n  checked,\n  blockComponentsMapper\n}: DropedProps) {\n  const { notionType: type, items, content } = config.block\n\n  const Item = () => {\n    if (type === blockEnum.CHECK_LIST) {\n      return (\n        <Fragment>\n          <Checkbox checked={checked} />\n          {children}\n        </Fragment>\n      )\n    } else if (type === blockEnum.TOGGLE_LIST && items) {\n      return (\n        <details>\n          <summary className={styles['drop-button']}>{children}</summary>\n          <div className={styles['drop-children']}>\n            {items.map((block) => {\n              const Component = block.getComponent(blockComponentsMapper)\n\n              return Component ? (\n                <Component {...config} key={block.id} block={block} />\n              ) : null\n            })}\n          </div>\n        </details>\n      )\n    }\n    return content ? (\n      <div>\n        {content.text.map((text, index) => (\n          <Text key={index} {...text} />\n        ))}\n      </div>\n    ) : (\n      <p>{children}</p>\n    )\n  }\n\n  return (\n    <li className={className}>\n      <Item />\n    </li>\n  )\n}\n\nexport default withContentValidation(ListItem)\n","import React, { PropsWithChildren } from 'react'\n\nimport { blockEnum } from '../../../types/BlockTypes'\nimport withContentValidation, {\n  DropedProps\n} from '../../../hoc/withContentValidation'\n\nimport ListItem from './components/ListItem'\n\nimport styles from './styles.module.css'\n\nfunction List({ className, config }: DropedProps) {\n  const { notionType: type, items } = config.block\n\n  const cn = `${\n    type === blockEnum.CHECK_LIST || type === blockEnum.TOGGLE_LIST\n      ? styles['remove-style']\n      : ''\n  } ${className}`\n\n  const Wrapper = (props: PropsWithChildren<{ type: blockEnum }>) => {\n    const { children, type } = props\n\n    return type === blockEnum.ENUM_LIST_PARENT ? (\n      <ol className={cn}>{children}</ol>\n    ) : (\n      <ul className={cn}>{children}</ul>\n    )\n  }\n\n  return (\n    <Wrapper type={type}>\n      {items?.map((item) => (\n        <ListItem {...config} key={item.id} block={item} />\n      ))}\n    </Wrapper>\n  )\n}\n\nexport default withContentValidation(List)\n","import React from 'react'\nimport withContentValidation, { DropedProps } from '../../../hoc/withContentValidation'\nimport { slugify } from '../../../utils/slugify'\n\nfunction Code({ className, children, language }: DropedProps) {\n  let cn = className\n\n  if (language) {\n    cn += ` language-${slugify(language)}`\n  }\n\n  return (\n    <pre><code className={cn}>{children}</code></pre>\n  )\n}\n\nexport default withContentValidation(Code)\n","import React from 'react'\nimport withContentValidation, { DropedProps } from '../../../hoc/withContentValidation'\nimport Link from '../Link'\n\ninterface Props {\n  className?: string\n  media?: DropedProps['media']\n}\n\nfunction File({ media, className }: Props) {\n  if (!media) return null\n\n  const { src, name, extension } = media\n\n  const cn = `block ${className ?? ''}`\n\n  return (\n    <Link url={src} className={cn}>\n      {name}.{extension}\n    </Link>\n  )\n}\n\nexport default withContentValidation(File)\n","import React from 'react'\n\nimport { blockEnum } from '../../../types/BlockTypes'\n\nimport withContentValidation, {\n  DropedProps\n} from '../../../hoc/withContentValidation'\n\nfunction Title({\n  children,\n  className,\n  plainText,\n  config,\n  slugifyFn\n}: DropedProps) {\n  const { notionType: type } = config.block\n  const props = {\n    className,\n    children,\n    ...(slugifyFn ? { id: slugifyFn(plainText || '') } : {})\n  }\n\n  const Title = () => {\n    if (type === blockEnum.HEADING2) {\n      return <h2 {...props} />\n    } else if (type === blockEnum.HEADING3) {\n      return <h3 {...props} />\n    }\n\n    return <h1 {...props} />\n  }\n\n  return slugifyFn ? (\n    <a href={`#${slugifyFn(plainText)}`} className='title'>\n      <Title />\n    </a>\n  ) : (\n    <Title />\n  )\n}\n\nexport default withContentValidation(Title)\n","import React from 'react'\n\nimport withContentValidation, {\n  DropedProps\n} from '../../../hoc/withContentValidation'\nimport Text from '../../core/Text'\n\nfunction Quote({ className, config }: DropedProps) {\n  const {\n    block: { content }\n  } = config\n\n  if (!content) return null\n  return (\n    <blockquote className={className}>\n      {content.text.map((text, index) => (\n        <Text key={index} {...text} />\n      ))}\n    </blockquote>\n  )\n}\n\nexport default withContentValidation(Quote)\n","import React from 'react'\n\nimport withContentValidation, {\n  DropedProps\n} from '../../../hoc/withContentValidation'\nimport IText from '../../../types/Text'\nimport { blockTypeClassname } from '../../../utils/getClassname'\n\nimport Text from '../../core/Text'\n\ntype tableRowProps = {\n  cells: IText[][]\n  className?: string\n  id: string\n}\nfunction TableRow({ cells, className, id }: tableRowProps) {\n  return (\n    <tr className={className}>\n      {cells.map((cellTexts, i) => (\n        <td key={`td-${id}-${i}`}>\n          {cellTexts.map((text, textI) => <Text {...text} key={`text-${id}-${textI}`} />)}\n        </td>\n      ))}\n    </tr>\n  )\n}\n\nfunction Table({ className, config }: DropedProps) {\n  const { content, items } = config.block\n  const rows = items?.filter(({ content }) => content?.cells)\n\n  if (!rows) return null\n\n  const cn = `${className} ${content?.hasColumnHeader ? 'has-column-header' : ''\n    } ${content?.hasRowHeader ? 'has-row-header' : ''}`.trim()\n\n  return (\n    <table className={cn}>\n      <tbody>\n        {rows.map(({ notionType, content, id }) => (\n          <TableRow className={blockTypeClassname(notionType)} cells={content!.cells!} key={id} id={id} />\n        ))}\n      </tbody>\n    </table>\n  )\n}\n\nexport default withContentValidation(Table)\n","import React from 'react'\n\nimport withContentValidation, {\n  DropedProps\n} from '../../../hoc/withContentValidation'\nimport Text from '../../core/Text'\n\nfunction Callout({ className, config }: DropedProps) {\n  const {\n    block: { content }\n  } = config\n\n  if (!content) return null\n\n  return (\n    <div className={className}>\n      {content.icon?.emoji}\n      <span>\n        {content.text.map((text, index) => (\n          <Text key={index} {...text} />\n        ))}\n      </span>\n    </div>\n  )\n}\n\nexport default withContentValidation(Callout)\n","import React from 'react'\n\nimport withContentValidation, {\n  DropedProps\n} from '../../../hoc/withContentValidation'\n\nfunction DummyText({ children }: DropedProps) {\n  return <React.Fragment>{children}</React.Fragment>\n}\n\nexport default withContentValidation(DummyText)\n","import React from 'react'\n\nimport withContentValidation, { DropedProps } from '../../../hoc/withContentValidation'\n\nfunction Paragraph({ children, className }: DropedProps) {\n  return <p className={className}>{children}</p>\n}\n\nexport default withContentValidation(Paragraph)\n","import Image from '.'\nimport withContentValidation from '../../../hoc/withContentValidation'\n\nexport default withContentValidation(Image)\n","import Video from '.'\nimport withContentValidation from '../../../hoc/withContentValidation'\n\nexport default withContentValidation(Video)\n","import Embed from '.'\nimport withContentValidation from '../../../hoc/withContentValidation'\n\nexport default withContentValidation(Embed)\n","import React from 'react'\nimport withContentValidation, {\n  DropedProps\n} from '../../../hoc/withContentValidation'\nimport { blockTypeClassname } from '../../../utils/getClassname'\n\ntype tableItemProps ={slugifyFn: ((text: string) => string) | null, plainText: string}\nfunction TableItem ({ slugifyFn, plainText }: tableItemProps) {\n  if (!slugifyFn) return <React.Fragment>{plainText}</React.Fragment>\n\n  return (\n    <a href={`#${slugifyFn(plainText)}`}>\n      {plainText}\n    </a>\n  )\n}\n\nfunction TableOfContents({ className, index, slugifyFn }: DropedProps) {\n  if (!index) return null\n\n  return (\n    <ul className={className}>\n      {index.map(({ id, plainText, type }) => (\n        <li key={id} className={blockTypeClassname(type)}>\n          <TableItem slugifyFn={slugifyFn} plainText={plainText}/>\n        </li>\n      ))}\n    </ul>\n  )\n}\n\nexport default withContentValidation(TableOfContents)\n","import { blockEnum } from '../../types/BlockTypes'\n\nimport List from '../../components/common/List'\nimport Code from '../../components/common/Code'\nimport File from '../../components/common/File'\nimport Title from '../../components/common/Title'\nimport Quote from '../../components/common/Quote'\nimport Table from '../../components/common/Table'\nimport Callout from '../../components/common/Callout'\nimport Divider from '../../components/common/Divider'\nimport DummyText from '../../components/common/DummyText'\nimport Paragraph from '../../components/common/Paragraph'\nimport Image from '../../components/common/Image/wrappedImage'\nimport Video from '../../components/common/Video/wrappedVideo'\nimport Embed from '../../components/common/Embed/wrappedEmbed'\nimport TableOfContents from '../../components/common/TableOfContents'\n\nimport { BlockComponentsMapperType } from './types'\n\nexport const BlockComponentsMapper: BlockComponentsMapperType = {\n  [blockEnum.PARAGRAPH]: Paragraph,\n  [blockEnum.HEADING1]: Title,\n  [blockEnum.HEADING2]: Title,\n  [blockEnum.HEADING3]: Title,\n  [blockEnum.DOTS_LIST]: List,\n  [blockEnum.ENUM_LIST]: List,\n  [blockEnum.ENUM_LIST_PARENT]: List,\n  [blockEnum.CHECK_LIST]: List,\n  [blockEnum.TOGGLE_LIST]: List,\n  [blockEnum.VIDEO]: Video,\n  [blockEnum.FILE]: File,\n  [blockEnum.PDF]: Embed,\n  [blockEnum.EMBED]: Embed,\n  [blockEnum.TITLE]: DummyText,\n  [blockEnum.IMAGE]: Image,\n  [blockEnum.CALLOUT]: Callout,\n  [blockEnum.QUOTE]: Quote,\n  [blockEnum.DIVIDER]: Divider,\n  [blockEnum.CODE]: Code,\n  [blockEnum.TABLE_OF_CONTENTS]: TableOfContents,\n  [blockEnum.TABLE]: Table,\n  [blockEnum.TABLE_ROW]: undefined,\n  [blockEnum.SYNCED_BLOCK]: undefined,\n  [blockEnum.BOOKMARK]: undefined,\n  [blockEnum.CHILD_PAGE]: undefined\n}\n","import React from 'react'\n\nconst Divider = () => <hr />\n\nexport default Divider\n","/* eslint-disable camelcase */\nimport Text from './Text'\nimport { blockEnum } from './BlockTypes'\nimport { NotionBlock } from './NotionBlock'\nimport { BlockComponentsMapperType } from '../constants/BlockComponentsMapper/types'\nimport { BlockComponentsMapper } from '../constants/BlockComponentsMapper'\n\nexport class ParsedBlock {\n  id: string\n  notionType: blockEnum\n  items: ParsedBlock[] | null\n  content: null | {\n    text: Text[]\n    checked?: boolean\n    caption?: Text[]\n    type?: 'external' | 'file'\n    external?: {\n      url: string\n    }\n    file?: {\n      url: string\n    }\n    url?: string\n    icon?: {\n      type: 'emoji'\n      emoji: string\n    }\n    language?: string\n    hasColumnHeader?: boolean\n    hasRowHeader?: boolean\n    cells?: Text[][]\n  }\n\n  constructor(initialValues: NotionBlock, isChild?: boolean) {\n    const notionType = initialValues.type as blockEnum\n    const content = initialValues[notionType]\n\n    if (!notionType || !content) return\n\n    this.id = initialValues.id\n    this.notionType = notionType\n\n    if (initialValues.type === blockEnum.TITLE && 'title' in initialValues) {\n      this.items = null\n      this.content = { text: initialValues.title }\n    } else if (initialValues.type === blockEnum.CHILD_PAGE) {\n      this.items = null\n      this.content = { text: [content.title] }\n    } else if (this.isList() && !isChild) {\n      this.content = null\n      this.items = [new ParsedBlock(initialValues, true)]\n    } else {\n      const {\n        rich_text,\n        text,\n        checked,\n        caption,\n        type,\n        external,\n        file,\n        url,\n        icon,\n        language,\n        has_column_header,\n        has_row_header,\n        cells\n      } = content\n\n      this.items =\n        content.children?.map(\n          (child: NotionBlock) => new ParsedBlock(child, true)\n        ) ?? null\n      this.content = {\n        text: rich_text ?? text ?? [],\n        checked,\n        caption,\n        type,\n        external,\n        file,\n        url,\n        icon,\n        language,\n        hasColumnHeader: has_column_header,\n        hasRowHeader: has_row_header,\n        cells\n      }\n    }\n  }\n\n  getComponent(customMapper?: BlockComponentsMapperType) {\n    const mapper = { ...BlockComponentsMapper, ...customMapper }\n    return mapper[this.notionType]\n  }\n\n  getUrl() {\n    if (!this.content) return null\n\n    let url = null\n\n    if (this.isEmbed()) {\n      url = this.content.url\n    } else if (this.isMedia() && this.content?.type) {\n      url = this.content[this.content.type]?.url\n    }\n    return url || null\n  }\n\n  getType() {\n    switch (this.notionType) {\n      case blockEnum.TOGGLE_LIST:\n      case blockEnum.DOTS_LIST:\n      case blockEnum.CHECK_LIST:\n      case blockEnum.ENUM_LIST:\n        return 'LIST'\n      case blockEnum.HEADING1:\n      case blockEnum.HEADING2:\n      case blockEnum.HEADING3:\n        return 'TITLE'\n      case blockEnum.FILE:\n      case blockEnum.VIDEO:\n      case blockEnum.IMAGE:\n      case blockEnum.PDF:\n      case blockEnum.EMBED:\n        return 'MEDIA'\n      case blockEnum.SYNCED_BLOCK:\n        return 'CONTAINER'\n      case blockEnum.TABLE:\n      case blockEnum.TABLE_OF_CONTENTS:\n        return 'TABLE'\n      case blockEnum.CODE:\n        return 'CODE'\n      default:\n        return 'ELEMENT'\n    }\n  }\n\n  getPlainText() {\n    const textComponent = this.isMedia()\n      ? this.content?.caption\n      : this.content?.text\n\n    return textComponent?.map((text: Text) => text.plain_text).join(' ') ?? ''\n  }\n\n  isList() {\n    return this.getType() === 'LIST'\n  }\n\n  isCode() {\n    return this.getType() === 'CODE'\n  }\n\n  isTitle() {\n    return this.getType() === 'TITLE'\n  }\n\n  isMedia() {\n    return this.getType() === 'MEDIA'\n  }\n\n  isEmbed() {\n    return this.getType() === 'MEDIA' && this.notionType === blockEnum.EMBED\n  }\n\n  isContainer() {\n    return this.getType() === 'CONTAINER'\n  }\n\n  isTable() {\n    return this.getType() === 'TABLE'\n  }\n\n  equalsType(type: blockEnum) {\n    return this.notionType === type\n  }\n\n  addItem(block: NotionBlock) {\n    if (!this.items) this.items = []\n\n    this.items.push(new ParsedBlock(block, true))\n  }\n\n  hasContent() {\n    return (\n      this.getUrl() ||\n      this.getPlainText().trim() !== '' ||\n      this.items?.length ||\n      this.isTable()\n    )\n  }\n\n  supportCustomComponents() {\n    return !this.isCode()\n  }\n}\n\nexport type SimpleBlock = {\n  id: string\n  type: blockEnum\n  text: Text[] | undefined\n  plainText: string\n  subItems?: SimpleBlock[]\n}\n","import { ParsedBlock } from '../types/Block'\nimport { UNSUPPORTED_TYPE } from '../types/BlockTypes'\nimport { NotionBlock } from '../types/NotionBlock'\n\nfunction areRelated(previous: ParsedBlock, current: ParsedBlock) {\n  return previous.isList() && previous.equalsType(current.notionType)\n}\n\n/**\n * The objetive of this function its remove blocks that are not supported and\n * put together the items of the same list to render easily\n * @param blocks the entire list of blocks\n * @returns\n */\nexport default function getBlocksToRender(blocks: NotionBlock[]): ParsedBlock[] {\n  const cleanBlocks = blocks.filter(\n    ({ type }) => type !== UNSUPPORTED_TYPE\n  )\n\n  if (!cleanBlocks.length) return []\n\n  const returnBlocks: ParsedBlock[] = []\n\n  for (let i = 0; i < cleanBlocks.length; i++) {\n    const previousBlock = returnBlocks[returnBlocks.length - 1]\n    const block = new ParsedBlock(cleanBlocks[i])\n\n    if (previousBlock && areRelated(previousBlock, block)) {\n      previousBlock.addItem(cleanBlocks[i])\n    } else {\n      if (block.isContainer() && block.items) {\n        returnBlocks.push(...block.items)\n      } else {\n        returnBlocks.push(block)\n      }\n    }\n  }\n\n  return returnBlocks\n}\n","import { ParsedBlock, SimpleBlock } from '../types/Block'\nimport { NotionBlock } from '../types/NotionBlock'\n\nexport function indexGenerator(blocks: NotionBlock[]): SimpleBlock[] {\n  const parsedBlocks = blocks.map(block => new ParsedBlock(block))\n  const titles = []\n\n  for (let i = 0; i < parsedBlocks.length; i++) {\n    if (parsedBlocks[i].isTitle()) {\n      titles.push(parsedBlocks[i])\n    } else if (parsedBlocks[i].isContainer() && parsedBlocks[i].items) {\n      titles.push(...parsedBlocks[i].items!.filter(block => block.isTitle()))\n    }\n  }\n\n  return titles.map((title) => ({\n    id: title.id,\n    type: title.notionType,\n    text: title.content?.text,\n    plainText: title.getPlainText()\n  })) ?? []\n}\n","import React, { PropsWithChildren } from 'react'\n\nimport { NotionBlock } from '../../../types/NotionBlock'\nimport { indexGenerator } from '../../../utils/indexGenerator'\nimport getBlocksToRender from '../../../utils/getBlocksToRender'\nimport {\n  BlockComponentsMapperType,\n  ClassnamesType\n} from '../../../constants/BlockComponentsMapper/types'\n\ninterface Props {\n  blocks: NotionBlock[]\n  useStyles?: boolean\n  classNames?: ClassnamesType\n  emptyBlocks?: boolean\n  slugifyFn?: (text: string) => string\n  mapPageUrlFn?: (input: any) => string\n  simpleTitles?: boolean\n  blockComponentsMapper?: BlockComponentsMapperType\n}\n\nfunction Render({\n  blocks,\n  classNames = {},\n  emptyBlocks,\n  useStyles,\n  slugifyFn,\n  mapPageUrlFn,\n  simpleTitles,\n  blockComponentsMapper\n}: Props) {\n  if (!blocks || !blocks.length) return null\n\n  const renderBlocks = getBlocksToRender(blocks)\n  const index = indexGenerator(blocks)\n\n  const Wrapper = (props: PropsWithChildren<{ useStyles: boolean }>) => {\n    const { useStyles, children } = props\n    return useStyles ? (\n      <div className='rnr-container'>{children}</div>\n    ) : (\n      <React.Fragment>{children}</React.Fragment>\n    )\n  }\n\n  return (\n    <Wrapper useStyles={!!useStyles}>\n      {renderBlocks.map((block) => {\n        const Component = block.getComponent(blockComponentsMapper)\n\n        return Component ? (\n          <Component\n            key={block.id}\n            classNames={classNames}\n            emptyBlocks={emptyBlocks}\n            block={block}\n            slugifyFn={slugifyFn}\n            mapPageUrlFn={mapPageUrlFn}\n            simpleTitles={simpleTitles}\n            index={index}\n            blockComponentsMapper={blockComponentsMapper}\n          />\n        ) : null\n      })}\n    </Wrapper>\n  )\n}\n\nexport default Render\n"],"names":["blockEnum","UNSUPPORTED_TYPE","EmptyBlock","React","createElement","className","getClassname","annotations","bold","code","italic","strikethrough","underline","color","trim","blockTypeClassname","notionType","Link","url","children","redirectProps","startsWith","target","rel","_extends","href","Image","media","src","alt","img","Embed","frameBorder","allow","allowFullScreen","title","MATCHERS","name","REGEXP","getUrl","_src$match","match","videoUrl","split","pop","join","PLAYERS","youtube","googleDrive","Video","player","find","option","test","getPlayer","controls","type","customComponents","transformProps","plain_text","indexOf","undefined","substr","replace","component","withCustomComponent","TempComponent","props","customComponent","Component","newProps","Text","block","blockComponentsMapper","textProps","_objectWithoutPropertiesLoose","_excluded","text","mapPageUrlFn","annotationsClassName","MENTION","_props$mention","mention","element","Fragment","content","link","slice","slugify","toString","toLowerCase","withContentValidation","_ref","emptyBlocks","slugifyFn","classNames","simpleTitles","hasContent","returnedProps","checked","plainText","classnameMapping","config","isMedia","_urlParts$","_urlParts$2$split$","urlParts","extension","getPlainText","getMediaProps","_block$content","_block$content2","_block$content3","Boolean","map","index","TextComponent","supportCustomComponents","WrappedText","key","language","getDefaultProps","Checkbox","readOnly","ListItem$1","items","Item","CHECK_LIST","TOGGLE_LIST","getComponent","id","cn","ENUM_LIST_PARENT","item","ListItem","Code$1","File$1","Title","HEADING2","HEADING3","Quote$1","TableRow","cells","cellTexts","i","textI","Table$1","rows","filter","hasColumnHeader","hasRowHeader","_content$icon","icon","emoji","Paragraph$1","TableItem","TableOfContents$1","BlockComponentsMapper","PARAGRAPH","Paragraph","HEADING1","DOTS_LIST","List","ENUM_LIST","VIDEO","FILE","File","PDF","EMBED","TITLE","DummyText","IMAGE","CALLOUT","Callout","QUOTE","Quote","DIVIDER","Divider","CODE","Code","TABLE_OF_CONTENTS","TableOfContents","TABLE","Table","TABLE_ROW","SYNCED_BLOCK","BOOKMARK","CHILD_PAGE","ParsedBlock","constructor","initialValues","isChild","this","isList","_content$children$map","_content$children","rich_text","caption","external","file","has_column_header","has_row_header","child","customMapper","_this$content","isEmbed","_this$content$this$co","getType","_this$content2","_this$content3","_textComponent$map$jo","textComponent","isCode","isTitle","isContainer","isTable","equalsType","addItem","push","_this$items","length","getBlocksToRender","blocks","cleanBlocks","returnBlocks","previousBlock","current","previous","indexGenerator","_titles$map","parsedBlocks","titles","_title$content","Render","useStyles","renderBlocks"],"mappings":"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"}